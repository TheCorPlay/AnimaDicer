package animadicer.ventana;

import animadicer.Anima;
import animadicer.Arma;
import animadicer.Armadura;
import animadicer.CargaException;
import animadicer.CargarSettings;
import animadicer.Dado;
import animadicer.Ficha;
import animadicer.FileJSON;
import animadicer.GuardaException;
import animadicer.Log;
import animadicer.Settings;
import animadicer.connection.Descargar;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Fernando
 */
public final class Dicer extends javax.swing.JFrame {

    private final String version;
    private final HashMap<String, String> archivosDireccionCargados;
    private final ArrayList<Ficha> archivosCargados;
    private final ArrayList<Boolean> guardarSinPreguntar;
    private boolean cambioNombres;

    /** Creates new form Dicer
     * @param version
     * @param settings
     * @param ficha
     * @param direccion */
    public Dicer(String version, Settings settings, Ficha ficha, String direccion) {        
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/icon.png")).getImage());
        this.version = version;
        this.settings = settings;
        this.ficha = ficha;
        this.direccion = direccion;
        this.archivosDireccionCargados = new HashMap();
        this.archivosCargados = new ArrayList();
        this.guardarSinPreguntar = new ArrayList();
        myInitComponents();
        initComponents();
        jDownload.setVisible(false);
        labelCargar.setVisible(false);
        this.log = new Log(textNotas);
        initPrincipales();
        initSecundarias();
        initResistencias();
        initArmaduras();
        initArmas();
        initCombate();
        log.setNotas(ficha.getNotas());
        dadosFisicos();
        listenerFisicos();
        
        menuGuardar.setEnabled(false);
        menuGuardarComo.setEnabled(false);
        menuGuardarTodo.setEnabled(false);
        duplicarInstancia.setEnabled(false);
        textNotas1.setEnabled(false);
        textNotas1.setEditable(false);

        checkAbiertas.setSelected(settings.getAbiertas());
        checkCapicua.setSelected(settings.getCapicua());
        checkDadosFisicos.setSelected(settings.getFisicos());
        
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                exit();
            }
        });
        
        doTask();
        actualizarVersion();
    }
    
    private void doTask() {
        this.setVisible(true);
        this.setTitle("Anima Dicer " + this.version);
        this.setLocationRelativeTo(null);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        lbl_titulo = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel204 = new javax.swing.JLabel();
        jLabel205 = new javax.swing.JLabel();
        jLabel206 = new javax.swing.JLabel();
        jLabel207 = new javax.swing.JLabel();
        jLabel208 = new javax.swing.JLabel();
        jLabel209 = new javax.swing.JLabel();
        jLabel210 = new javax.swing.JLabel();
        jLabel211 = new javax.swing.JLabel();
        jLabel212 = new javax.swing.JLabel();
        jLabel213 = new javax.swing.JLabel();
        jLabel214 = new javax.swing.JLabel();
        jLabel215 = new javax.swing.JLabel();
        jLabel216 = new javax.swing.JLabel();
        jLabel217 = new javax.swing.JLabel();
        jLabel218 = new javax.swing.JLabel();
        jLabel219 = new javax.swing.JLabel();
        jLabel220 = new javax.swing.JLabel();
        jLabel221 = new javax.swing.JLabel();
        jLabel222 = new javax.swing.JLabel();
        jLabel223 = new javax.swing.JLabel();
        jLabel224 = new javax.swing.JLabel();
        jLabel225 = new javax.swing.JLabel();
        jLabel226 = new javax.swing.JLabel();
        jLabel227 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        fieldNombre = new javax.swing.JTextField();
        fieldCategoria = new javax.swing.JTextField();
        fieldNivel = new javax.swing.JTextField();
        jLabel175 = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        barraVida = new javax.swing.JProgressBar();
        fieldVida = new javax.swing.JTextField();
        fieldVidaActual = new javax.swing.JTextField();
        jLabel129 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        barraZeon = new javax.swing.JProgressBar();
        fieldZeon = new javax.swing.JTextField();
        fieldZeonActual = new javax.swing.JTextField();
        jLabel130 = new javax.swing.JLabel();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        barraCansancio = new javax.swing.JProgressBar();
        fieldCansancioActual = new javax.swing.JTextField();
        jLabel176 = new javax.swing.JLabel();
        fieldCansancio = new javax.swing.JTextField();
        comboNombre = new javax.swing.JComboBox<>();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        barraKi = new javax.swing.JProgressBar();
        fieldKi = new javax.swing.JTextField();
        fieldKiActual = new javax.swing.JTextField();
        jLabel362 = new javax.swing.JLabel();
        jLabel363 = new javax.swing.JLabel();
        comboEntidad = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jLabel132 = new javax.swing.JLabel();
        jLabel133 = new javax.swing.JLabel();
        jLabel134 = new javax.swing.JLabel();
        jLabel135 = new javax.swing.JLabel();
        jLabel136 = new javax.swing.JLabel();
        jLabel137 = new javax.swing.JLabel();
        jLabel138 = new javax.swing.JLabel();
        jLabel139 = new javax.swing.JLabel();
        jLabel140 = new javax.swing.JLabel();
        jLabel141 = new javax.swing.JLabel();
        jLabel142 = new javax.swing.JLabel();
        jLabel143 = new javax.swing.JLabel();
        jLabel144 = new javax.swing.JLabel();
        jLabel145 = new javax.swing.JLabel();
        jLabel146 = new javax.swing.JLabel();
        jLabel147 = new javax.swing.JLabel();
        jLabel148 = new javax.swing.JLabel();
        jLabel149 = new javax.swing.JLabel();
        jLabel150 = new javax.swing.JLabel();
        jLabel151 = new javax.swing.JLabel();
        jLabel152 = new javax.swing.JLabel();
        jLabel153 = new javax.swing.JLabel();
        jLabel154 = new javax.swing.JLabel();
        jLabel155 = new javax.swing.JLabel();
        jLabel156 = new javax.swing.JLabel();
        jLabel157 = new javax.swing.JLabel();
        jLabel158 = new javax.swing.JLabel();
        jLabel159 = new javax.swing.JLabel();
        jLabel160 = new javax.swing.JLabel();
        jLabel161 = new javax.swing.JLabel();
        jLabel162 = new javax.swing.JLabel();
        jLabel163 = new javax.swing.JLabel();
        jLabel164 = new javax.swing.JLabel();
        jLabel165 = new javax.swing.JLabel();
        jLabel166 = new javax.swing.JLabel();
        jLabel167 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textNotas = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        l_Acrobacias = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        l_Atletismo = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        l_Acrobacias2 = new javax.swing.JLabel();
        l_Acrobacias1 = new javax.swing.JLabel();
        l_Acrobacias3 = new javax.swing.JLabel();
        l_Acrobacias4 = new javax.swing.JLabel();
        l_Acrobacias5 = new javax.swing.JLabel();
        l_Acrobacias6 = new javax.swing.JLabel();
        l_Acrobacias7 = new javax.swing.JLabel();
        l_Acrobacias8 = new javax.swing.JLabel();
        l_Acrobacias9 = new javax.swing.JLabel();
        l_Acrobacias10 = new javax.swing.JLabel();
        l_Acrobacias11 = new javax.swing.JLabel();
        l_Acrobacias12 = new javax.swing.JLabel();
        l_Acrobacias13 = new javax.swing.JLabel();
        l_Acrobacias14 = new javax.swing.JLabel();
        l_Acrobacias15 = new javax.swing.JLabel();
        l_Acrobacias16 = new javax.swing.JLabel();
        l_Acrobacias17 = new javax.swing.JLabel();
        l_Acrobacias18 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        jLabel91 = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        jLabel95 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        jLabel98 = new javax.swing.JLabel();
        jLabel99 = new javax.swing.JLabel();
        jLabel100 = new javax.swing.JLabel();
        jLabel101 = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();
        jLabel103 = new javax.swing.JLabel();
        jLabel104 = new javax.swing.JLabel();
        jLabel105 = new javax.swing.JLabel();
        jLabel106 = new javax.swing.JLabel();
        jLabel107 = new javax.swing.JLabel();
        jLabel108 = new javax.swing.JLabel();
        jLabel109 = new javax.swing.JLabel();
        jLabel110 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        jLabel112 = new javax.swing.JLabel();
        jLabel113 = new javax.swing.JLabel();
        jLabel114 = new javax.swing.JLabel();
        jLabel115 = new javax.swing.JLabel();
        jLabel116 = new javax.swing.JLabel();
        jLabel117 = new javax.swing.JLabel();
        jLabel118 = new javax.swing.JLabel();
        jLabel119 = new javax.swing.JLabel();
        jLabel120 = new javax.swing.JLabel();
        jLabel121 = new javax.swing.JLabel();
        jLabel122 = new javax.swing.JLabel();
        jLabel123 = new javax.swing.JLabel();
        jLabel124 = new javax.swing.JLabel();
        jLabel125 = new javax.swing.JLabel();
        jLabel126 = new javax.swing.JLabel();
        jLabel127 = new javax.swing.JLabel();
        jLabel128 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        l_Acrobacias19 = new javax.swing.JLabel();
        l_Acrobacias20 = new javax.swing.JLabel();
        l_Acrobacias21 = new javax.swing.JLabel();
        l_Acrobacias22 = new javax.swing.JLabel();
        l_Acrobacias23 = new javax.swing.JLabel();
        l_Acrobacias24 = new javax.swing.JLabel();
        l_Acrobacias25 = new javax.swing.JLabel();
        l_Acrobacias26 = new javax.swing.JLabel();
        l_Acrobacias27 = new javax.swing.JLabel();
        l_Acrobacias28 = new javax.swing.JLabel();
        l_Acrobacias29 = new javax.swing.JLabel();
        l_Acrobacias30 = new javax.swing.JLabel();
        l_Acrobacias31 = new javax.swing.JLabel();
        l_Acrobacias32 = new javax.swing.JLabel();
        l_Acrobacias33 = new javax.swing.JLabel();
        l_Acrobacias34 = new javax.swing.JLabel();
        l_Acrobacias35 = new javax.swing.JLabel();
        l_Acrobacias36 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel291 = new javax.swing.JLabel();
        jLabel292 = new javax.swing.JLabel();
        jLabel293 = new javax.swing.JLabel();
        jLabel294 = new javax.swing.JLabel();
        jLabel295 = new javax.swing.JLabel();
        jLabel296 = new javax.swing.JLabel();
        jLabel297 = new javax.swing.JLabel();
        jLabel298 = new javax.swing.JLabel();
        jLabel299 = new javax.swing.JLabel();
        jLabel300 = new javax.swing.JLabel();
        jLabel301 = new javax.swing.JLabel();
        jLabel302 = new javax.swing.JLabel();
        jLabel303 = new javax.swing.JLabel();
        jLabel304 = new javax.swing.JLabel();
        jLabel305 = new javax.swing.JLabel();
        jLabel306 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jLabel343 = new javax.swing.JLabel();
        jLabel344 = new javax.swing.JLabel();
        finalCalcComb = new javax.swing.JTextField();
        armaduraCalcComb = new javax.swing.JTextField();
        jLabel345 = new javax.swing.JLabel();
        ventajaCalcComb = new javax.swing.JTextField();
        jLabel346 = new javax.swing.JLabel();
        baseCalcComb = new javax.swing.JTextField();
        jPanel19 = new javax.swing.JPanel();
        jLabel307 = new javax.swing.JLabel();
        jLabel308 = new javax.swing.JLabel();
        jLabel309 = new javax.swing.JLabel();
        jLabel310 = new javax.swing.JLabel();
        jLabel311 = new javax.swing.JLabel();
        jLabel312 = new javax.swing.JLabel();
        jLabel313 = new javax.swing.JLabel();
        jLabel314 = new javax.swing.JLabel();
        jLabel315 = new javax.swing.JLabel();
        jLabel316 = new javax.swing.JLabel();
        jLabel317 = new javax.swing.JLabel();
        jLabel318 = new javax.swing.JLabel();
        jLabel319 = new javax.swing.JLabel();
        jLabel320 = new javax.swing.JLabel();
        jLabel321 = new javax.swing.JLabel();
        jLabel322 = new javax.swing.JLabel();
        jLabel323 = new javax.swing.JLabel();
        jLabel324 = new javax.swing.JLabel();
        jLabel325 = new javax.swing.JLabel();
        jLabel326 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jLabel327 = new javax.swing.JLabel();
        jLabel328 = new javax.swing.JLabel();
        jLabel329 = new javax.swing.JLabel();
        jLabel330 = new javax.swing.JLabel();
        jLabel331 = new javax.swing.JLabel();
        jLabel332 = new javax.swing.JLabel();
        jLabel333 = new javax.swing.JLabel();
        jLabel334 = new javax.swing.JLabel();
        jLabel335 = new javax.swing.JLabel();
        jLabel336 = new javax.swing.JLabel();
        jLabel337 = new javax.swing.JLabel();
        jLabel338 = new javax.swing.JLabel();
        jLabel339 = new javax.swing.JLabel();
        jLabel340 = new javax.swing.JLabel();
        jLabel341 = new javax.swing.JLabel();
        jLabel342 = new javax.swing.JLabel();
        jLabel356 = new javax.swing.JLabel();
        jLabel357 = new javax.swing.JLabel();
        jLabel358 = new javax.swing.JLabel();
        comboTurno = new javax.swing.JComboBox<>();
        jLabel355 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jLabel347 = new javax.swing.JLabel();
        jLabel348 = new javax.swing.JLabel();
        jLabel349 = new javax.swing.JLabel();
        jLabel350 = new javax.swing.JLabel();
        resCritico = new javax.swing.JTextField();
        damageCritico = new javax.swing.JTextField();
        libreCritico = new javax.swing.JTextField();
        dadoCritico = new javax.swing.JTextField();
        jLabel351 = new javax.swing.JLabel();
        jLabel352 = new javax.swing.JLabel();
        jLabel353 = new javax.swing.JLabel();
        jLabel354 = new javax.swing.JLabel();
        posCritico = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jLabel177 = new javax.swing.JLabel();
        jLabel178 = new javax.swing.JLabel();
        jLabel179 = new javax.swing.JLabel();
        jLabel180 = new javax.swing.JLabel();
        jLabel181 = new javax.swing.JLabel();
        jLabel194 = new javax.swing.JLabel();
        jLabel195 = new javax.swing.JLabel();
        jLabel196 = new javax.swing.JLabel();
        jLabel197 = new javax.swing.JLabel();
        jLabel198 = new javax.swing.JLabel();
        jLabel199 = new javax.swing.JLabel();
        jLabel200 = new javax.swing.JLabel();
        jLabel201 = new javax.swing.JLabel();
        jLabel202 = new javax.swing.JLabel();
        jLabel203 = new javax.swing.JLabel();
        jLabel230 = new javax.swing.JLabel();
        jLabel231 = new javax.swing.JLabel();
        jLabel232 = new javax.swing.JLabel();
        jLabel233 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel253 = new javax.swing.JLabel();
        jLabel254 = new javax.swing.JLabel();
        jLabel255 = new javax.swing.JLabel();
        jLabel256 = new javax.swing.JLabel();
        jLabel257 = new javax.swing.JLabel();
        jLabel258 = new javax.swing.JLabel();
        jLabel259 = new javax.swing.JLabel();
        jLabel260 = new javax.swing.JLabel();
        jLabel261 = new javax.swing.JLabel();
        jLabel262 = new javax.swing.JLabel();
        jLabel263 = new javax.swing.JLabel();
        jLabel264 = new javax.swing.JLabel();
        jLabel265 = new javax.swing.JLabel();
        jLabel266 = new javax.swing.JLabel();
        jLabel267 = new javax.swing.JLabel();
        jLabel268 = new javax.swing.JLabel();
        jLabel269 = new javax.swing.JLabel();
        jLabel270 = new javax.swing.JLabel();
        jLabel271 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel272 = new javax.swing.JLabel();
        jLabel273 = new javax.swing.JLabel();
        jLabel274 = new javax.swing.JLabel();
        jLabel275 = new javax.swing.JLabel();
        jLabel276 = new javax.swing.JLabel();
        jLabel277 = new javax.swing.JLabel();
        jLabel278 = new javax.swing.JLabel();
        jLabel279 = new javax.swing.JLabel();
        jLabel280 = new javax.swing.JLabel();
        jLabel281 = new javax.swing.JLabel();
        jLabel282 = new javax.swing.JLabel();
        jLabel283 = new javax.swing.JLabel();
        jLabel284 = new javax.swing.JLabel();
        jLabel285 = new javax.swing.JLabel();
        jLabel286 = new javax.swing.JLabel();
        jLabel287 = new javax.swing.JLabel();
        jLabel288 = new javax.swing.JLabel();
        jLabel289 = new javax.swing.JLabel();
        jLabel290 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel234 = new javax.swing.JLabel();
        jLabel235 = new javax.swing.JLabel();
        jLabel236 = new javax.swing.JLabel();
        jLabel237 = new javax.swing.JLabel();
        jLabel238 = new javax.swing.JLabel();
        jLabel239 = new javax.swing.JLabel();
        jLabel240 = new javax.swing.JLabel();
        jLabel241 = new javax.swing.JLabel();
        jLabel242 = new javax.swing.JLabel();
        jLabel243 = new javax.swing.JLabel();
        jLabel244 = new javax.swing.JLabel();
        jLabel245 = new javax.swing.JLabel();
        jLabel246 = new javax.swing.JLabel();
        jLabel247 = new javax.swing.JLabel();
        jLabel248 = new javax.swing.JLabel();
        jLabel249 = new javax.swing.JLabel();
        jLabel250 = new javax.swing.JLabel();
        jLabel251 = new javax.swing.JLabel();
        jLabel252 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jLabel182 = new javax.swing.JLabel();
        jLabel183 = new javax.swing.JLabel();
        jLabel184 = new javax.swing.JLabel();
        jLabel185 = new javax.swing.JLabel();
        jLabel186 = new javax.swing.JLabel();
        jLabel187 = new javax.swing.JLabel();
        jLabel188 = new javax.swing.JLabel();
        jLabel189 = new javax.swing.JLabel();
        jLabel191 = new javax.swing.JLabel();
        checkArmadura1 = new javax.swing.JCheckBox();
        checkArmadura2 = new javax.swing.JCheckBox();
        checkArmadura3 = new javax.swing.JCheckBox();
        checkArmadura4 = new javax.swing.JCheckBox();
        jPanel15 = new javax.swing.JPanel();
        jLabel190 = new javax.swing.JLabel();
        jLabel192 = new javax.swing.JLabel();
        jLabel193 = new javax.swing.JLabel();
        calcFinal = new javax.swing.JTextField();
        calcPorcentaje = new javax.swing.JTextField();
        calcBase = new javax.swing.JTextField();
        jLabel228 = new javax.swing.JLabel();
        comboCritico = new javax.swing.JComboBox<>();
        jLabel229 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textNotas1 = new javax.swing.JTextArea();
        labelCargar = new javax.swing.JLabel();
        jDownload = new javax.swing.JLabel();
        jLabel174 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnuAbrir = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        menuGuardar = new javax.swing.JMenuItem();
        menuGuardarComo = new javax.swing.JMenuItem();
        menuGuardarTodo = new javax.swing.JMenuItem();
        duplicarInstancia = new javax.swing.JMenuItem();
        menuDescargar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        checkAbiertas = new javax.swing.JCheckBoxMenuItem();
        checkCapicua = new javax.swing.JCheckBoxMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        checkDadosFisicos = new javax.swing.JCheckBoxMenuItem();
        jMenu3 = new javax.swing.JMenu();
        ayuda = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jPanel5.setBackground(new java.awt.Color(102, 102, 102));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_titulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/anima5.png"))); // NOI18N
        jPanel5.add(lbl_titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 0, -1, 190));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Resistencias", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel204.setText("RM:");
        jPanel16.add(jLabel204, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        jLabel205.setText("RF:");
        jPanel16.add(jLabel205, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        jLabel206.setText("RE:");
        jPanel16.add(jLabel206, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        jLabel207.setText("RV:");
        jPanel16.add(jLabel207, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));

        jLabel208.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel208.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel208.setText("Base");
        jPanel16.add(jLabel208, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 25, 50, -1));

        jLabel209.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel209.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel209.setText("Libre");
        jPanel16.add(jLabel209, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 25, 30, -1));

        jLabel210.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel210.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel210.setText("Dado");
        jPanel16.add(jLabel210, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 25, 40, -1));

        jLabel211.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel211.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel211.setText("Resultado");
        jPanel16.add(jLabel211, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 25, 60, -1));

        jLabel212.setText("+");
        jPanel16.add(jLabel212, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, -1, 20));

        jLabel213.setText("+");
        jPanel16.add(jLabel213, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, -1, 20));

        jLabel214.setText("=");
        jPanel16.add(jLabel214, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 50, -1, 20));

        jLabel215.setText("=");
        jPanel16.add(jLabel215, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 80, -1, 20));

        jLabel216.setText("+");
        jPanel16.add(jLabel216, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, -1, 20));

        jLabel217.setText("+");
        jPanel16.add(jLabel217, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, -1, 20));

        jLabel218.setText("=");
        jPanel16.add(jLabel218, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 110, -1, 20));

        jLabel219.setText("+");
        jPanel16.add(jLabel219, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, -1, 20));

        jLabel220.setText("+");
        jPanel16.add(jLabel220, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, -1, 20));

        jLabel221.setText("=");
        jPanel16.add(jLabel221, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 140, -1, 20));

        jLabel222.setText("+");
        jPanel16.add(jLabel222, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, -1, 20));

        jLabel223.setText("+");
        jPanel16.add(jLabel223, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, -1, 20));

        jLabel224.setText("RP:");
        jPanel16.add(jLabel224, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, -1));

        jLabel225.setText("+");
        jPanel16.add(jLabel225, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, -1, 20));

        jLabel226.setText("+");
        jPanel16.add(jLabel226, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, -1, 20));

        jLabel227.setText("=");
        jPanel16.add(jLabel227, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 170, -1, 20));

        jPanel1.add(jPanel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 270, 200));

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Información", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setText("Nombre:");
        jPanel6.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 22, -1, -1));

        jLabel13.setText("Categoria:");
        jPanel6.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 47, -1, -1));

        jLabel14.setText("Nivel:");
        jPanel6.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 72, -1, -1));

        jLabel15.setText("Vida:");
        jPanel6.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 97, -1, -1));

        jLabel16.setText("Ki:");
        jPanel6.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 147, -1, -1));

        fieldNombre.setEditable(false);
        fieldNombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel6.add(fieldNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 70, 20));

        fieldCategoria.setEditable(false);
        fieldCategoria.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel6.add(fieldCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 45, 190, -1));

        fieldNivel.setEditable(false);
        fieldNivel.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel6.add(fieldNivel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, 190, -1));

        jLabel175.setText("Cansancio:");
        jPanel6.add(jLabel175, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 172, -1, -1));

        barraVida.setForeground(new java.awt.Color(200, 0, 0));

        fieldVida.setEditable(false);
        fieldVida.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        fieldVida.setText("125");
        fieldVida.setBorder(null);
        fieldVida.setOpaque(false);

        fieldVidaActual.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        fieldVidaActual.setText("125");
        fieldVidaActual.setBorder(null);
        fieldVidaActual.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        fieldVidaActual.setOpaque(false);
        fieldVidaActual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldVidaActualFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldVidaActualFocusLost(evt);
            }
        });
        fieldVidaActual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldVidaActualKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fieldVidaActualKeyTyped(evt);
            }
        });

        jLabel129.setText("/");

        jLayeredPane2.setLayer(barraVida, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(fieldVida, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane2.setLayer(fieldVidaActual, javax.swing.JLayeredPane.DRAG_LAYER);
        jLayeredPane2.setLayer(jLabel129, javax.swing.JLayeredPane.PALETTE_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane2Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(fieldVidaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel129)
                .addGap(18, 18, 18)
                .addComponent(fieldVida, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(barraVida, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(fieldVidaActual, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                .addComponent(fieldVida)
                .addComponent(jLabel129))
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(barraVida, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel6.add(jLayeredPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 95, 190, 20));

        barraZeon.setForeground(new java.awt.Color(0, 110, 170));

        fieldZeon.setEditable(false);
        fieldZeon.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        fieldZeon.setText("125");
        fieldZeon.setBorder(null);
        fieldZeon.setOpaque(false);

        fieldZeonActual.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        fieldZeonActual.setText("125");
        fieldZeonActual.setBorder(null);
        fieldZeonActual.setOpaque(false);
        fieldZeonActual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldZeonActualFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldZeonActualFocusLost(evt);
            }
        });
        fieldZeonActual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldZeonActualKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fieldZeonActualKeyTyped(evt);
            }
        });

        jLabel130.setText("/");

        jLayeredPane1.setLayer(barraZeon, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(fieldZeon, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.setLayer(fieldZeonActual, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.setLayer(jLabel130, javax.swing.JLayeredPane.PALETTE_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addGap(0, 57, Short.MAX_VALUE)
                .addComponent(fieldZeonActual, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(fieldZeon, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(barraZeon, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel130)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(fieldZeonActual, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                .addComponent(fieldZeon))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(barraZeon, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel130)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel6.add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 120, 190, 20));

        barraCansancio.setForeground(new java.awt.Color(0, 110, 0));

        fieldCansancioActual.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        fieldCansancioActual.setText("5");
        fieldCansancioActual.setBorder(null);
        fieldCansancioActual.setOpaque(false);
        fieldCansancioActual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldCansancioActualFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldCansancioActualFocusLost(evt);
            }
        });
        fieldCansancioActual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldCansancioActualKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fieldCansancioActualKeyTyped(evt);
            }
        });

        jLabel176.setText("/");

        fieldCansancio.setEditable(false);
        fieldCansancio.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        fieldCansancio.setText("5");
        fieldCansancio.setBorder(null);
        fieldCansancio.setOpaque(false);

        jLayeredPane3.setLayer(barraCansancio, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(fieldCansancioActual, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane3.setLayer(jLabel176, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane3.setLayer(fieldCansancio, javax.swing.JLayeredPane.PALETTE_LAYER);

        javax.swing.GroupLayout jLayeredPane3Layout = new javax.swing.GroupLayout(jLayeredPane3);
        jLayeredPane3.setLayout(jLayeredPane3Layout);
        jLayeredPane3Layout.setHorizontalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane3Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(fieldCansancioActual, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(fieldCansancio, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
            .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(barraCansancio, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel176)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jLayeredPane3Layout.setVerticalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(fieldCansancioActual, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                .addComponent(fieldCansancio))
            .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(barraCansancio, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel176)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel6.add(jLayeredPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 190, 20));

        comboNombre.setModel(new javax.swing.DefaultComboBoxModel<>());
        comboNombre.setEnabled(false);
        comboNombre.setName("");
        comboNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboNombreActionPerformed(evt);
            }
        });
        jPanel6.add(comboNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 80, 20));

        barraKi.setForeground(new java.awt.Color(220, 215, 0));

        fieldKi.setEditable(false);
        fieldKi.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        fieldKi.setText("125");
        fieldKi.setBorder(null);
        fieldKi.setOpaque(false);

        fieldKiActual.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        fieldKiActual.setText("125");
        fieldKiActual.setBorder(null);
        fieldKiActual.setOpaque(false);
        fieldKiActual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldKiActualFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldKiActualFocusLost(evt);
            }
        });
        fieldKiActual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldKiActualKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fieldKiActualKeyTyped(evt);
            }
        });

        jLabel362.setText("/");

        jLayeredPane4.setLayer(barraKi, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(fieldKi, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane4.setLayer(fieldKiActual, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane4.setLayer(jLabel362, javax.swing.JLayeredPane.PALETTE_LAYER);

        javax.swing.GroupLayout jLayeredPane4Layout = new javax.swing.GroupLayout(jLayeredPane4);
        jLayeredPane4.setLayout(jLayeredPane4Layout);
        jLayeredPane4Layout.setHorizontalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane4Layout.createSequentialGroup()
                .addGap(0, 57, Short.MAX_VALUE)
                .addComponent(fieldKiActual, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(fieldKi, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
            .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(barraKi, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel362)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jLayeredPane4Layout.setVerticalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(fieldKiActual, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                .addComponent(fieldKi))
            .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(barraKi, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel362)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel6.add(jLayeredPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 145, 190, 20));

        jLabel363.setText("Zeon:");
        jPanel6.add(jLabel363, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 122, -1, -1));

        comboEntidad.setEnabled(false);
        comboEntidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEntidadActionPerformed(evt);
            }
        });
        jPanel6.add(comboEntidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 40, 20));

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 280, 210));

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Atributos", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel132.setText("AGI:");
        jPanel7.add(jLabel132, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 52, -1, -1));

        jLabel133.setText("CON:");
        jPanel7.add(jLabel133, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 73, -1, -1));

        jLabel134.setText("DES:");
        jPanel7.add(jLabel134, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 94, -1, -1));

        jLabel135.setText("FUE:");
        jPanel7.add(jLabel135, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 115, -1, -1));

        jLabel136.setText("INT:");
        jPanel7.add(jLabel136, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 136, -1, -1));

        jLabel137.setText("PER:");
        jPanel7.add(jLabel137, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 157, -1, -1));

        jLabel138.setText("POD:");
        jPanel7.add(jLabel138, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 178, -1, -1));

        jLabel139.setText("VOL:");
        jPanel7.add(jLabel139, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 199, -1, -1));

        jLabel140.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel140.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel140.setText("Base");
        jPanel7.add(jLabel140, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 50, -1));

        jLabel141.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel141.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel141.setText("Libre");
        jPanel7.add(jLabel141, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 30, -1));

        jLabel142.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel142.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel142.setText("Dado");
        jPanel7.add(jLabel142, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, 40, -1));

        jLabel143.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel143.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel143.setText("Resultado");
        jPanel7.add(jLabel143, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 30, 60, -1));

        jLabel144.setText("+");
        jPanel7.add(jLabel144, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 50, -1, 20));

        jLabel145.setText("+");
        jPanel7.add(jLabel145, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 50, -1, 20));

        jLabel146.setText("=");
        jPanel7.add(jLabel146, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 50, -1, 20));

        jLabel147.setText("+");
        jPanel7.add(jLabel147, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 92, -1, 20));

        jLabel148.setText("+");
        jPanel7.add(jLabel148, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 92, -1, 20));

        jLabel149.setText("=");
        jPanel7.add(jLabel149, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 92, -1, 20));

        jLabel150.setText("+");
        jPanel7.add(jLabel150, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 71, -1, 20));

        jLabel151.setText("+");
        jPanel7.add(jLabel151, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 71, -1, 20));

        jLabel152.setText("=");
        jPanel7.add(jLabel152, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 71, -1, 20));

        jLabel153.setText("+");
        jPanel7.add(jLabel153, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 113, -1, 20));

        jLabel154.setText("+");
        jPanel7.add(jLabel154, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 113, -1, 20));

        jLabel155.setText("=");
        jPanel7.add(jLabel155, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 113, -1, 20));

        jLabel156.setText("+");
        jPanel7.add(jLabel156, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 134, -1, 20));

        jLabel157.setText("+");
        jPanel7.add(jLabel157, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 134, -1, 20));

        jLabel158.setText("=");
        jPanel7.add(jLabel158, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 134, -1, 20));

        jLabel159.setText("+");
        jPanel7.add(jLabel159, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 155, -1, 20));

        jLabel160.setText("+");
        jPanel7.add(jLabel160, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 155, -1, 20));

        jLabel161.setText("=");
        jPanel7.add(jLabel161, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 155, -1, 20));

        jLabel162.setText("+");
        jPanel7.add(jLabel162, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 176, -1, 20));

        jLabel163.setText("+");
        jPanel7.add(jLabel163, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 176, -1, 20));

        jLabel164.setText("=");
        jPanel7.add(jLabel164, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 176, -1, 20));

        jLabel165.setText("+");
        jPanel7.add(jLabel165, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 198, -1, 20));

        jLabel166.setText("+");
        jPanel7.add(jLabel166, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 198, -1, 20));

        jLabel167.setText("=");
        jPanel7.add(jLabel167, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 198, -1, 20));

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 310, 230));

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Log", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textNotas.setEditable(false);
        textNotas.setColumns(20);
        textNotas.setRows(5);
        jScrollPane1.setViewportView(textNotas);

        jPanel9.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 300, 150));

        jPanel1.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 240, 320, 180));

        jTabbedPane1.addTab("Principales", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        l_Acrobacias.setText("Acrobacias:");
        jPanel2.add(l_Acrobacias, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 70, 20));

        jLabel3.setText("+");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, -1, 20));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Resultado");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 0, 60, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Base");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 0, 50, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Libre");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, 30, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Dado");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 0, 40, -1));

        l_Atletismo.setText("Atletismo:");
        jPanel2.add(l_Atletismo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 41, 70, 20));

        jLabel8.setText("+");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 41, -1, 20));

        l_Acrobacias2.setText("Montar:");
        jPanel2.add(l_Acrobacias2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 62, 70, 20));

        l_Acrobacias1.setText("Ocultismo:");
        jPanel2.add(l_Acrobacias1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 70, 20));

        l_Acrobacias3.setText("Nadar:");
        jPanel2.add(l_Acrobacias3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 83, 70, 20));

        l_Acrobacias4.setText("Trepar:");
        jPanel2.add(l_Acrobacias4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 104, 70, 20));

        l_Acrobacias5.setText("Saltar:");
        jPanel2.add(l_Acrobacias5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 125, 70, 20));

        l_Acrobacias6.setText("Frialdad:");
        jPanel2.add(l_Acrobacias6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 146, 70, 20));

        l_Acrobacias7.setText("P.Fuerza:");
        jPanel2.add(l_Acrobacias7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 167, 70, 20));

        l_Acrobacias8.setText("Res.Dolor:");
        jPanel2.add(l_Acrobacias8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 188, 70, 20));

        l_Acrobacias9.setText("Advertir:");
        jPanel2.add(l_Acrobacias9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 209, 70, 20));

        l_Acrobacias10.setText("Buscar:");
        jPanel2.add(l_Acrobacias10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 70, 20));

        l_Acrobacias11.setText("Rastrear:");
        jPanel2.add(l_Acrobacias11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 251, 70, 20));

        l_Acrobacias12.setText("Animales:");
        jPanel2.add(l_Acrobacias12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 272, 70, 20));

        l_Acrobacias13.setText("Ciencia:");
        jPanel2.add(l_Acrobacias13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 293, 70, 20));

        l_Acrobacias14.setText("Herbolaria:");
        jPanel2.add(l_Acrobacias14, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 314, 70, 20));

        l_Acrobacias15.setText("Historia:");
        jPanel2.add(l_Acrobacias15, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 335, 70, 20));

        l_Acrobacias16.setText("Medicina:");
        jPanel2.add(l_Acrobacias16, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 356, 70, 20));

        l_Acrobacias17.setText("Memorizar:");
        jPanel2.add(l_Acrobacias17, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 377, 70, 20));

        l_Acrobacias18.setText("Navegación:");
        jPanel2.add(l_Acrobacias18, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 398, 70, 20));

        jLabel17.setText("+");
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 83, -1, 20));

        jLabel18.setText("+");
        jPanel2.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 62, -1, 20));

        jLabel19.setText("+");
        jPanel2.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 167, -1, 20));

        jLabel20.setText("+");
        jPanel2.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 146, -1, 20));

        jLabel21.setText("+");
        jPanel2.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 125, -1, 20));

        jLabel22.setText("+");
        jPanel2.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 104, -1, 20));

        jLabel23.setText("+");
        jPanel2.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 335, -1, 20));

        jLabel24.setText("+");
        jPanel2.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 314, -1, 20));

        jLabel25.setText("+");
        jPanel2.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 293, -1, 20));

        jLabel26.setText("+");
        jPanel2.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 272, -1, 20));

        jLabel27.setText("+");
        jPanel2.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 251, -1, 20));

        jLabel28.setText("+");
        jPanel2.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, -1, 20));

        jLabel29.setText("+");
        jPanel2.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 209, -1, 20));

        jLabel30.setText("+");
        jPanel2.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 188, -1, 20));

        jLabel31.setText("+");
        jPanel2.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 398, -1, 20));

        jLabel32.setText("+");
        jPanel2.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 377, -1, 20));

        jLabel33.setText("+");
        jPanel2.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 356, -1, 20));

        jLabel34.setText("+");
        jPanel2.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, -1, 20));

        jLabel35.setText("+");
        jPanel2.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 41, -1, 20));

        jLabel36.setText("+");
        jPanel2.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 62, -1, 20));

        jLabel37.setText("+");
        jPanel2.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 83, -1, 20));

        jLabel38.setText("+");
        jPanel2.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 104, -1, 20));

        jLabel39.setText("+");
        jPanel2.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 125, -1, 20));

        jLabel40.setText("+");
        jPanel2.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 146, -1, 20));

        jLabel41.setText("+");
        jPanel2.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 167, -1, 20));

        jLabel42.setText("+");
        jPanel2.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 188, -1, 20));

        jLabel43.setText("+");
        jPanel2.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 209, -1, 20));

        jLabel44.setText("+");
        jPanel2.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, -1, 20));

        jLabel45.setText("+");
        jPanel2.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 251, -1, 20));

        jLabel46.setText("+");
        jPanel2.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 272, -1, 20));

        jLabel47.setText("+");
        jPanel2.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 293, -1, 20));

        jLabel48.setText("+");
        jPanel2.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 314, -1, 20));

        jLabel49.setText("+");
        jPanel2.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 335, -1, 20));

        jLabel50.setText("+");
        jPanel2.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 356, -1, 20));

        jLabel51.setText("+");
        jPanel2.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 377, -1, 20));

        jLabel52.setText("+");
        jPanel2.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 398, -1, 20));

        jLabel53.setText("+");
        jPanel2.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, -1, 20));

        jLabel54.setText("+");
        jPanel2.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 41, -1, 20));

        jLabel55.setText("+");
        jPanel2.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 62, -1, 20));

        jLabel56.setText("+");
        jPanel2.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 83, -1, 20));

        jLabel57.setText("+");
        jPanel2.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 104, -1, 20));

        jLabel58.setText("+");
        jPanel2.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 125, -1, 20));

        jLabel59.setText("+");
        jPanel2.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 146, -1, 20));

        jLabel60.setText("+");
        jPanel2.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 167, -1, 20));

        jLabel61.setText("+");
        jPanel2.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 188, -1, 20));

        jLabel62.setText("+");
        jPanel2.add(jLabel62, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 209, -1, 20));

        jLabel63.setText("+");
        jPanel2.add(jLabel63, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 230, -1, 20));

        jLabel64.setText("+");
        jPanel2.add(jLabel64, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 251, -1, 20));

        jLabel65.setText("+");
        jPanel2.add(jLabel65, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 272, -1, 20));

        jLabel66.setText("+");
        jPanel2.add(jLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 293, -1, 20));

        jLabel67.setText("+");
        jPanel2.add(jLabel67, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 314, -1, 20));

        jLabel68.setText("+");
        jPanel2.add(jLabel68, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 335, -1, 20));

        jLabel69.setText("+");
        jPanel2.add(jLabel69, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 356, -1, 20));

        jLabel70.setText("+");
        jPanel2.add(jLabel70, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 377, -1, 20));

        jLabel71.setText("+");
        jPanel2.add(jLabel71, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 398, -1, 20));

        jLabel72.setText("+");
        jPanel2.add(jLabel72, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 20, -1, 20));

        jLabel73.setText("+");
        jPanel2.add(jLabel73, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 41, -1, 20));

        jLabel74.setText("+");
        jPanel2.add(jLabel74, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 62, -1, 20));

        jLabel75.setText("+");
        jPanel2.add(jLabel75, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 83, -1, 20));

        jLabel76.setText("+");
        jPanel2.add(jLabel76, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 104, -1, 20));

        jLabel77.setText("+");
        jPanel2.add(jLabel77, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 125, -1, 20));

        jLabel78.setText("+");
        jPanel2.add(jLabel78, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 146, -1, 20));

        jLabel79.setText("+");
        jPanel2.add(jLabel79, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 167, -1, 20));

        jLabel80.setText("+");
        jPanel2.add(jLabel80, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 188, -1, 20));

        jLabel81.setText("+");
        jPanel2.add(jLabel81, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 209, -1, 20));

        jLabel82.setText("+");
        jPanel2.add(jLabel82, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 230, -1, 20));

        jLabel83.setText("+");
        jPanel2.add(jLabel83, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 251, -1, 20));

        jLabel84.setText("+");
        jPanel2.add(jLabel84, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 272, -1, 20));

        jLabel85.setText("+");
        jPanel2.add(jLabel85, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 293, -1, 20));

        jLabel86.setText("+");
        jPanel2.add(jLabel86, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 314, -1, 20));

        jLabel87.setText("+");
        jPanel2.add(jLabel87, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 335, -1, 20));

        jLabel88.setText("+");
        jPanel2.add(jLabel88, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 356, -1, 20));

        jLabel89.setText("+");
        jPanel2.add(jLabel89, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 377, -1, 20));

        jLabel90.setText("+");
        jPanel2.add(jLabel90, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 398, -1, 20));

        jLabel91.setText("=");
        jPanel2.add(jLabel91, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 20, -1, 20));

        jLabel92.setText("=");
        jPanel2.add(jLabel92, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 41, -1, 20));

        jLabel93.setText("=");
        jPanel2.add(jLabel93, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 62, -1, 20));

        jLabel94.setText("=");
        jPanel2.add(jLabel94, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 83, -1, 20));

        jLabel95.setText("=");
        jPanel2.add(jLabel95, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 104, -1, 20));

        jLabel96.setText("=");
        jPanel2.add(jLabel96, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 125, -1, 20));

        jLabel97.setText("=");
        jPanel2.add(jLabel97, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 146, -1, 20));

        jLabel98.setText("=");
        jPanel2.add(jLabel98, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 167, -1, 20));

        jLabel99.setText("=");
        jPanel2.add(jLabel99, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 188, -1, 20));

        jLabel100.setText("=");
        jPanel2.add(jLabel100, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 209, -1, 20));

        jLabel101.setText("=");
        jPanel2.add(jLabel101, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 230, -1, 20));

        jLabel102.setText("=");
        jPanel2.add(jLabel102, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 251, -1, 20));

        jLabel103.setText("=");
        jPanel2.add(jLabel103, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 272, -1, 20));

        jLabel104.setText("=");
        jPanel2.add(jLabel104, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 293, -1, 20));

        jLabel105.setText("=");
        jPanel2.add(jLabel105, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 314, -1, 20));

        jLabel106.setText("=");
        jPanel2.add(jLabel106, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 335, -1, 20));

        jLabel107.setText("=");
        jPanel2.add(jLabel107, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 356, -1, 20));

        jLabel108.setText("=");
        jPanel2.add(jLabel108, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 377, -1, 20));

        jLabel109.setText("=");
        jPanel2.add(jLabel109, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 398, -1, 20));

        jLabel110.setText("=");
        jPanel2.add(jLabel110, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 20, -1, 20));

        jLabel111.setText("=");
        jPanel2.add(jLabel111, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 41, -1, 20));

        jLabel112.setText("=");
        jPanel2.add(jLabel112, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 62, -1, 20));

        jLabel113.setText("=");
        jPanel2.add(jLabel113, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 83, -1, 20));

        jLabel114.setText("=");
        jPanel2.add(jLabel114, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 104, -1, 20));

        jLabel115.setText("=");
        jPanel2.add(jLabel115, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 125, -1, 20));

        jLabel116.setText("=");
        jPanel2.add(jLabel116, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 146, -1, 20));

        jLabel117.setText("=");
        jPanel2.add(jLabel117, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 167, -1, 20));

        jLabel118.setText("=");
        jPanel2.add(jLabel118, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 188, -1, 20));

        jLabel119.setText("=");
        jPanel2.add(jLabel119, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 209, -1, 20));

        jLabel120.setText("=");
        jPanel2.add(jLabel120, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 230, -1, 20));

        jLabel121.setText("=");
        jPanel2.add(jLabel121, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 251, -1, 20));

        jLabel122.setText("=");
        jPanel2.add(jLabel122, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 272, -1, 20));

        jLabel123.setText("=");
        jPanel2.add(jLabel123, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 293, -1, 20));

        jLabel124.setText("=");
        jPanel2.add(jLabel124, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 314, -1, 20));

        jLabel125.setText("=");
        jPanel2.add(jLabel125, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 335, -1, 20));

        jLabel126.setText("=");
        jPanel2.add(jLabel126, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 356, -1, 20));

        jLabel127.setText("=");
        jPanel2.add(jLabel127, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 377, -1, 20));

        jLabel128.setText("=");
        jPanel2.add(jLabel128, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 398, -1, 20));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Base");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 0, 50, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Libre");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 0, 30, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setText("Dado");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 0, 40, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Resultado");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 0, 60, -1));

        l_Acrobacias19.setText("Tasación:");
        jPanel2.add(l_Acrobacias19, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 41, 70, 20));

        l_Acrobacias20.setText("V.Mágica:");
        jPanel2.add(l_Acrobacias20, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 62, 70, 20));

        l_Acrobacias21.setText("Estilo:");
        jPanel2.add(l_Acrobacias21, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 83, 70, 20));

        l_Acrobacias22.setText("Intimidar:");
        jPanel2.add(l_Acrobacias22, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 104, 70, 20));

        l_Acrobacias23.setText("Liderazgo:");
        jPanel2.add(l_Acrobacias23, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 124, 70, 20));

        l_Acrobacias24.setText("Persuasión:");
        jPanel2.add(l_Acrobacias24, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 145, 70, 20));

        l_Acrobacias25.setText("Cerrajería:");
        jPanel2.add(l_Acrobacias25, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 166, 70, 20));

        l_Acrobacias26.setText("Disfraz:");
        jPanel2.add(l_Acrobacias26, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 187, 70, 20));

        l_Acrobacias27.setText("Ocultarse:");
        jPanel2.add(l_Acrobacias27, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 208, 70, 20));

        l_Acrobacias28.setText("Robo:");
        jPanel2.add(l_Acrobacias28, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 229, 70, 20));

        l_Acrobacias29.setText("Sigilo:");
        jPanel2.add(l_Acrobacias29, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 250, 70, 20));

        l_Acrobacias30.setText("Trampería:");
        jPanel2.add(l_Acrobacias30, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 271, 70, 20));

        l_Acrobacias31.setText("Venenos:");
        jPanel2.add(l_Acrobacias31, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 292, 70, 20));

        l_Acrobacias32.setText("Arte:");
        jPanel2.add(l_Acrobacias32, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 313, 70, 20));

        l_Acrobacias33.setText("Baile:");
        jPanel2.add(l_Acrobacias33, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 334, 70, 20));

        l_Acrobacias34.setText("Forja:");
        jPanel2.add(l_Acrobacias34, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 355, 70, 20));

        l_Acrobacias35.setText("Música:");
        jPanel2.add(l_Acrobacias35, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 376, 70, 20));

        l_Acrobacias36.setText("T.Manos:");
        jPanel2.add(l_Acrobacias36, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 398, 70, 20));

        jTabbedPane1.addTab("Secundarias", jPanel2);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Combate Sobrenatural", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel17.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel291.setText("Proy. Psíquica:");
        jPanel17.add(jLabel291, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 110, -1, -1));

        jLabel292.setText("Proy.Mágica:");
        jPanel17.add(jLabel292, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 40, -1, -1));

        jLabel293.setText("Pot. Psíquico:");
        jPanel17.add(jLabel293, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 75, -1, -1));

        jLabel294.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel294.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel294.setText("Base");
        jPanel17.add(jLabel294, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 50, -1));

        jLabel295.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel295.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel295.setText("Libre");
        jPanel17.add(jLabel295, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 30, -1));

        jLabel296.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel296.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel296.setText("Dado");
        jPanel17.add(jLabel296, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 40, -1));

        jLabel297.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel297.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel297.setText("Resultado");
        jPanel17.add(jLabel297, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, 60, -1));

        jLabel298.setText("+");
        jPanel17.add(jLabel298, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, -1, 20));

        jLabel299.setText("+");
        jPanel17.add(jLabel299, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, -1, 20));

        jLabel300.setText("=");
        jPanel17.add(jLabel300, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 40, -1, 20));

        jLabel301.setText("=");
        jPanel17.add(jLabel301, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 75, -1, 20));

        jLabel302.setText("+");
        jPanel17.add(jLabel302, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 75, -1, 20));

        jLabel303.setText("+");
        jPanel17.add(jLabel303, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 75, -1, 20));

        jLabel304.setText("+");
        jPanel17.add(jLabel304, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, -1, 20));

        jLabel305.setText("+");
        jPanel17.add(jLabel305, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, -1, 20));

        jLabel306.setText("=");
        jPanel17.add(jLabel306, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 110, -1, 20));

        jPanel4.add(jPanel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 10, 325, 160));

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Daño Ejercido", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel18.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel343.setText("Daño Base:");
        jPanel18.add(jLabel343, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jLabel344.setText("Ventaja:");
        jPanel18.add(jLabel344, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, -1, -1));

        finalCalcComb.setEditable(false);
        finalCalcComb.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel18.add(finalCalcComb, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 60, -1));

        armaduraCalcComb.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        armaduraCalcComb.setText("0");
        armaduraCalcComb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                armaduraCalcCombKeyReleased(evt);
            }
        });
        jPanel18.add(armaduraCalcComb, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 60, -1));

        jLabel345.setText("Daño Final:");
        jPanel18.add(jLabel345, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, -1, -1));

        ventajaCalcComb.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ventajaCalcComb.setText("0");
        ventajaCalcComb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ventajaCalcCombKeyReleased(evt);
            }
        });
        jPanel18.add(ventajaCalcComb, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, 60, -1));

        jLabel346.setText("Armadura:");
        jPanel18.add(jLabel346, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        baseCalcComb.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        baseCalcComb.setText("0");
        baseCalcComb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                baseCalcCombKeyReleased(evt);
            }
        });
        jPanel18.add(baseCalcComb, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 60, -1));

        jPanel4.add(jPanel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 170, 325, 90));

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Convocatoria", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel19.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel307.setText("Convocar:");
        jPanel19.add(jLabel307, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        jLabel308.setText("Dominar:");
        jPanel19.add(jLabel308, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel309.setText("Atar:");
        jPanel19.add(jLabel309, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        jLabel310.setText("Desconvocar:");
        jPanel19.add(jLabel310, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        jLabel311.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel311.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel311.setText("Base");
        jPanel19.add(jLabel311, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 50, -1));

        jLabel312.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel312.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel312.setText("Libre");
        jPanel19.add(jLabel312, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 30, -1));

        jLabel313.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel313.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel313.setText("Dado");
        jPanel19.add(jLabel313, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, 40, -1));

        jLabel314.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel314.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel314.setText("Resultado");
        jPanel19.add(jLabel314, new org.netbeans.lib.awtextra.AbsoluteConstraints(238, 20, 60, -1));

        jLabel315.setText("+");
        jPanel19.add(jLabel315, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, -1, 20));

        jLabel316.setText("+");
        jPanel19.add(jLabel316, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, -1, 20));

        jLabel317.setText("=");
        jPanel19.add(jLabel317, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 40, -1, 20));

        jLabel318.setText("=");
        jPanel19.add(jLabel318, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 70, -1, 20));

        jLabel319.setText("+");
        jPanel19.add(jLabel319, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, -1, 20));

        jLabel320.setText("+");
        jPanel19.add(jLabel320, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, -1, 20));

        jLabel321.setText("+");
        jPanel19.add(jLabel321, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, -1, 20));

        jLabel322.setText("+");
        jPanel19.add(jLabel322, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, -1, 20));

        jLabel323.setText("=");
        jPanel19.add(jLabel323, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 100, -1, 20));

        jLabel324.setText("+");
        jPanel19.add(jLabel324, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, -1, 20));

        jLabel325.setText("+");
        jPanel19.add(jLabel325, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, -1, 20));

        jLabel326.setText("=");
        jPanel19.add(jLabel326, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 130, -1, 20));

        jPanel4.add(jPanel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 310, 160));

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Combate Físico", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel21.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel327.setText("Esquiva:");
        jPanel21.add(jLabel327, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, -1, -1));

        jLabel328.setText("Ataque:");
        jPanel21.add(jLabel328, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel329.setText("Defensa:");
        jPanel21.add(jLabel329, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        jLabel330.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel330.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel330.setText("Base");
        jPanel21.add(jLabel330, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 50, -1));

        jLabel331.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel331.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel331.setText("Libre");
        jPanel21.add(jLabel331, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 30, -1));

        jLabel332.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel332.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel332.setText("Dado");
        jPanel21.add(jLabel332, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, 40, -1));

        jLabel333.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel333.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel333.setText("Resultado");
        jPanel21.add(jLabel333, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 30, 60, -1));

        jLabel334.setText("+");
        jPanel21.add(jLabel334, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, -1, 20));

        jLabel335.setText("+");
        jPanel21.add(jLabel335, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, -1, 20));

        jLabel336.setText("=");
        jPanel21.add(jLabel336, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 110, -1, 20));

        jLabel337.setText("=");
        jPanel21.add(jLabel337, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 150, -1, 20));

        jLabel338.setText("+");
        jPanel21.add(jLabel338, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, -1, 20));

        jLabel339.setText("+");
        jPanel21.add(jLabel339, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, -1, 20));

        jLabel340.setText("+");
        jPanel21.add(jLabel340, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, -1, 20));

        jLabel341.setText("+");
        jPanel21.add(jLabel341, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, -1, 20));

        jLabel342.setText("=");
        jPanel21.add(jLabel342, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 190, -1, 20));

        jLabel356.setText("+");
        jPanel21.add(jLabel356, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, -1, 20));

        jLabel357.setText("+");
        jPanel21.add(jLabel357, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, -1, 20));

        jLabel358.setText("=");
        jPanel21.add(jLabel358, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 70, -1, 20));

        comboTurno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Turno Desarmado", "Turno Arma 1", "Turno Arma 2", "Turno Arma 3", "Turno Arma 4" }));
        comboTurno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboTurnoItemStateChanged(evt);
            }
        });
        jPanel21.add(comboTurno, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 240, -1));

        jLabel355.setText("Turno:");
        jPanel21.add(jLabel355, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jPanel4.add(jPanel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 275, 250));

        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Crítico", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel22.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel347.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel347.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel347.setText("Daño Final");
        jPanel22.add(jLabel347, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 60, -1));

        jLabel348.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel348.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel348.setText("Libre");
        jPanel22.add(jLabel348, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 30, -1));

        jLabel349.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel349.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel349.setText("Dado");
        jPanel22.add(jLabel349, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 40, -1));

        jLabel350.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel350.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel350.setText("Resultado");
        jPanel22.add(jLabel350, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, 60, -1));

        resCritico.setEditable(false);
        resCritico.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        resCritico.setText("0");
        jPanel22.add(resCritico, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 60, -1));

        damageCritico.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        damageCritico.setText("0");
        damageCritico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                damageCriticoKeyReleased(evt);
            }
        });
        jPanel22.add(damageCritico, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, 40, -1));

        libreCritico.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        libreCritico.setText("0");
        libreCritico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                libreCriticoKeyReleased(evt);
            }
        });
        jPanel22.add(libreCritico, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 40, -1));

        dadoCritico.setEditable(false);
        dadoCritico.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dadoCritico.setText("0");
        jPanel22.add(dadoCritico, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 40, -1));

        jLabel351.setText("+");
        jPanel22.add(jLabel351, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, -1, 20));

        jLabel352.setText("=");
        jPanel22.add(jLabel352, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, -1, 20));

        jLabel353.setText("+");
        jPanel22.add(jLabel353, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, -1, 20));

        jLabel354.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel354.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel354.setText("Localización de Crítico");
        jPanel22.add(jLabel354, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 290, 30));

        posCritico.setEditable(false);
        posCritico.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel22.add(posCritico, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 230, -1));

        jPanel4.add(jPanel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 260, 290, 160));

        jTabbedPane1.addTab("Combate", jPanel4);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel177.setText("Nombre:");
        jPanel10.add(jLabel177, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel178.setText("Daño:");
        jPanel10.add(jLabel178, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel179.setText("Crítico:");
        jPanel10.add(jLabel179, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jLabel180.setText("Entereza:");
        jPanel10.add(jLabel180, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 40, -1, -1));

        jLabel181.setText("Presencia:");
        jPanel10.add(jLabel181, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, -1, -1));

        jLabel194.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel194.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel194.setText("Base");
        jPanel10.add(jLabel194, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, 50, -1));

        jLabel195.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel195.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel195.setText("Libre");
        jPanel10.add(jLabel195, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 30, -1));

        jLabel196.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel196.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel196.setText("Dado");
        jPanel10.add(jLabel196, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 40, -1));

        jLabel197.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel197.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel197.setText("Resultado");
        jPanel10.add(jLabel197, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, 60, -1));

        jLabel198.setText("+");
        jPanel10.add(jLabel198, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 70, -1, 20));

        jLabel199.setText("+");
        jPanel10.add(jLabel199, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 40, -1, 20));

        jLabel200.setText("+");
        jPanel10.add(jLabel200, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 70, -1, 20));

        jLabel201.setText("+");
        jPanel10.add(jLabel201, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, -1, 20));

        jLabel202.setText("=");
        jPanel10.add(jLabel202, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 40, -1, 20));

        jLabel203.setText("=");
        jPanel10.add(jLabel203, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 70, -1, 20));

        jLabel230.setText("Rotura:");
        jPanel10.add(jLabel230, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 70, -1, -1));

        jLabel231.setText("+");
        jPanel10.add(jLabel231, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, -1, 20));

        jLabel232.setText("+");
        jPanel10.add(jLabel232, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, -1, 20));

        jLabel233.setText("=");
        jPanel10.add(jLabel233, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 100, -1, 20));

        jTabbedPane2.addTab("Arma 1", jPanel10);

        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel253.setText("Crítico:");
        jPanel11.add(jLabel253, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jLabel254.setText("Daño:");
        jPanel11.add(jLabel254, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel255.setText("Nombre:");
        jPanel11.add(jLabel255, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel256.setText("Presencia:");
        jPanel11.add(jLabel256, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, -1, -1));

        jLabel257.setText("Rotura:");
        jPanel11.add(jLabel257, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 70, -1, -1));

        jLabel258.setText("Entereza:");
        jPanel11.add(jLabel258, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 40, -1, -1));

        jLabel259.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel259.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel259.setText("Base");
        jPanel11.add(jLabel259, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, 50, -1));

        jLabel260.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel260.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel260.setText("Libre");
        jPanel11.add(jLabel260, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 30, -1));

        jLabel261.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel261.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel261.setText("Dado");
        jPanel11.add(jLabel261, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 40, -1));

        jLabel262.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel262.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel262.setText("Resultado");
        jPanel11.add(jLabel262, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, 60, -1));

        jLabel263.setText("=");
        jPanel11.add(jLabel263, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 40, -1, 20));

        jLabel264.setText("=");
        jPanel11.add(jLabel264, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 70, -1, 20));

        jLabel265.setText("=");
        jPanel11.add(jLabel265, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 100, -1, 20));

        jLabel266.setText("+");
        jPanel11.add(jLabel266, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, -1, 20));

        jLabel267.setText("+");
        jPanel11.add(jLabel267, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, -1, 20));

        jLabel268.setText("+");
        jPanel11.add(jLabel268, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 70, -1, 20));

        jLabel269.setText("+");
        jPanel11.add(jLabel269, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 40, -1, 20));

        jLabel270.setText("+");
        jPanel11.add(jLabel270, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, -1, 20));

        jLabel271.setText("+");
        jPanel11.add(jLabel271, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 70, -1, 20));

        jTabbedPane2.addTab("Arma 2", jPanel11);

        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel272.setText("Crítico:");
        jPanel12.add(jLabel272, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jLabel273.setText("Daño:");
        jPanel12.add(jLabel273, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel274.setText("Nombre:");
        jPanel12.add(jLabel274, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel275.setText("Presencia:");
        jPanel12.add(jLabel275, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, -1, -1));

        jLabel276.setText("Rotura:");
        jPanel12.add(jLabel276, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 70, -1, -1));

        jLabel277.setText("Entereza:");
        jPanel12.add(jLabel277, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 40, -1, -1));

        jLabel278.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel278.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel278.setText("Base");
        jPanel12.add(jLabel278, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, 50, -1));

        jLabel279.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel279.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel279.setText("Libre");
        jPanel12.add(jLabel279, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 30, -1));

        jLabel280.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel280.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel280.setText("Dado");
        jPanel12.add(jLabel280, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 40, -1));

        jLabel281.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel281.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel281.setText("Resultado");
        jPanel12.add(jLabel281, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, 60, -1));

        jLabel282.setText("=");
        jPanel12.add(jLabel282, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 40, -1, 20));

        jLabel283.setText("=");
        jPanel12.add(jLabel283, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 70, -1, 20));

        jLabel284.setText("=");
        jPanel12.add(jLabel284, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 100, -1, 20));

        jLabel285.setText("+");
        jPanel12.add(jLabel285, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, -1, 20));

        jLabel286.setText("+");
        jPanel12.add(jLabel286, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, -1, 20));

        jLabel287.setText("+");
        jPanel12.add(jLabel287, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 70, -1, 20));

        jLabel288.setText("+");
        jPanel12.add(jLabel288, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 40, -1, 20));

        jLabel289.setText("+");
        jPanel12.add(jLabel289, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, -1, 20));

        jLabel290.setText("+");
        jPanel12.add(jLabel290, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 70, -1, 20));

        jTabbedPane2.addTab("Arma 3", jPanel12);

        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel234.setText("Crítico:");
        jPanel13.add(jLabel234, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jLabel235.setText("Daño:");
        jPanel13.add(jLabel235, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel236.setText("Nombre:");
        jPanel13.add(jLabel236, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel237.setText("Presencia:");
        jPanel13.add(jLabel237, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, -1, -1));

        jLabel238.setText("Rotura:");
        jPanel13.add(jLabel238, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 70, -1, -1));

        jLabel239.setText("Entereza:");
        jPanel13.add(jLabel239, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 40, -1, -1));

        jLabel240.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel240.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel240.setText("Base");
        jPanel13.add(jLabel240, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, 50, -1));

        jLabel241.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel241.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel241.setText("Libre");
        jPanel13.add(jLabel241, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 30, -1));

        jLabel242.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel242.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel242.setText("Dado");
        jPanel13.add(jLabel242, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 40, -1));

        jLabel243.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel243.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel243.setText("Resultado");
        jPanel13.add(jLabel243, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, 60, -1));

        jLabel244.setText("=");
        jPanel13.add(jLabel244, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 40, -1, 20));

        jLabel245.setText("=");
        jPanel13.add(jLabel245, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 70, -1, 20));

        jLabel246.setText("=");
        jPanel13.add(jLabel246, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 100, -1, 20));

        jLabel247.setText("+");
        jPanel13.add(jLabel247, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, -1, 20));

        jLabel248.setText("+");
        jPanel13.add(jLabel248, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, -1, 20));

        jLabel249.setText("+");
        jPanel13.add(jLabel249, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 70, -1, 20));

        jLabel250.setText("+");
        jPanel13.add(jLabel250, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 40, -1, 20));

        jLabel251.setText("+");
        jPanel13.add(jLabel251, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, -1, 20));

        jLabel252.setText("+");
        jPanel13.add(jLabel252, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 70, -1, 20));

        jTabbedPane2.addTab("Arma 4", jPanel13);

        jPanel3.add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 610, 190));

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Armaduras", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel182.setText("FIL");
        jPanel14.add(jLabel182, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, -1, -1));

        jLabel183.setText("CON");
        jPanel14.add(jLabel183, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, -1, -1));

        jLabel184.setText("PEN");
        jPanel14.add(jLabel184, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, -1, -1));

        jLabel185.setText("CAL");
        jPanel14.add(jLabel185, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, -1, -1));

        jLabel186.setText("ELE");
        jPanel14.add(jLabel186, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 40, -1, -1));

        jLabel187.setText("FRI");
        jPanel14.add(jLabel187, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, -1, -1));

        jLabel188.setText("ENER");
        jPanel14.add(jLabel188, new org.netbeans.lib.awtextra.AbsoluteConstraints(348, 40, -1, -1));

        jLabel189.setText("Posición");
        jPanel14.add(jLabel189, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 40, -1, -1));

        jLabel191.setText("Nombre");
        jPanel14.add(jLabel191, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, -1, -1));

        checkArmadura1.setText("Armadura 1");
        checkArmadura1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                checkArmadura1MouseReleased(evt);
            }
        });
        jPanel14.add(checkArmadura1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        checkArmadura2.setText("Armadura 2");
        checkArmadura2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                checkArmadura2MouseReleased(evt);
            }
        });
        jPanel14.add(checkArmadura2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        checkArmadura3.setText("Armadura 3");
        checkArmadura3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                checkArmadura3MouseReleased(evt);
            }
        });
        jPanel14.add(checkArmadura3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        checkArmadura4.setText("Casco");
        checkArmadura4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                checkArmadura4MouseReleased(evt);
            }
        });
        jPanel14.add(checkArmadura4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Daño Recibido", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel190.setText("Ventaja:");
        jPanel15.add(jLabel190, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 70, 20));

        jLabel192.setText("Daño base:");
        jPanel15.add(jLabel192, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 70, 20));

        jLabel193.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel193.setText("Daño Final:");
        jPanel15.add(jLabel193, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        calcFinal.setEditable(false);
        calcFinal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        calcFinal.setText("5");
        jPanel15.add(calcFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 60, -1));

        calcPorcentaje.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        calcPorcentaje.setText("100");
        calcPorcentaje.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                calcPorcentajeKeyReleased(evt);
            }
        });
        jPanel15.add(calcPorcentaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, 70, -1));

        calcBase.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        calcBase.setText("5");
        calcBase.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                calcBaseKeyReleased(evt);
            }
        });
        jPanel15.add(calcBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 70, -1));

        jLabel228.setText("Crítico:");
        jPanel15.add(jLabel228, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        comboCritico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FIL", "CON", "PEN", "CAL", "ELE", "FRI", "ENER" }));
        comboCritico.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboCriticoItemStateChanged(evt);
            }
        });
        jPanel15.add(comboCritico, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 70, -1));

        jPanel14.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 160, 180));

        jLabel229.setText("Modificadores");
        jPanel14.add(jLabel229, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        jPanel3.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 610, 210));

        jTabbedPane1.addTab("Armas y Armaduras", jPanel3);

        jPanel20.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Notas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel23.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textNotas1.setColumns(20);
        textNotas1.setLineWrap(true);
        textNotas1.setRows(5);
        textNotas1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textNotas1FocusLost(evt);
            }
        });
        textNotas1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textNotas1KeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(textNotas1);

        jPanel23.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 590, 390));

        jPanel20.add(jPanel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 420));

        jTabbedPane1.addTab("Extra", jPanel20);

        jPanel5.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 200, 620, -1));

        labelCargar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/load.png"))); // NOI18N
        jPanel5.add(labelCargar, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 170, -1, -1));

        jDownload.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/download.png"))); // NOI18N
        jPanel5.add(jDownload, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 170, 50, 50));

        jLabel174.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Fondo.png"))); // NOI18N
        jPanel5.add(jLabel174, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 660));

        jMenu1.setText("Archivo");

        mnuAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        mnuAbrir.setText("Abrir");
        mnuAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAbrirActionPerformed(evt);
            }
        });
        jMenu1.add(mnuAbrir);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Abrir en otra ventana");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        menuGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuGuardar.setText("Guardar");
        menuGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuGuardarActionPerformed(evt);
            }
        });
        jMenu1.add(menuGuardar);

        menuGuardarComo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        menuGuardarComo.setText("Guardar como");
        menuGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuGuardarComoActionPerformed(evt);
            }
        });
        jMenu1.add(menuGuardarComo);

        menuGuardarTodo.setText("Guardar todas las fichas");
        menuGuardarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuGuardarTodoActionPerformed(evt);
            }
        });
        jMenu1.add(menuGuardarTodo);

        duplicarInstancia.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        duplicarInstancia.setText("Multiplicar ficha actual");
        duplicarInstancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duplicarInstanciaActionPerformed(evt);
            }
        });
        jMenu1.add(duplicarInstancia);

        menuDescargar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        menuDescargar.setText("Descargar ficha");
        menuDescargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDescargarActionPerformed(evt);
            }
        });
        jMenu1.add(menuDescargar);
        jMenu1.add(jSeparator1);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Salir");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Opciones");

        checkAbiertas.setSelected(true);
        checkAbiertas.setText("Tiradas Abiertas");
        checkAbiertas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAbiertasActionPerformed(evt);
            }
        });
        jMenu2.add(checkAbiertas);

        checkCapicua.setSelected(true);
        checkCapicua.setText("Tiradas Capicua");
        checkCapicua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCapicuaActionPerformed(evt);
            }
        });
        jMenu2.add(checkCapicua);
        jMenu2.add(jSeparator3);

        checkDadosFisicos.setSelected(true);
        checkDadosFisicos.setText("Dados Físicos");
        checkDadosFisicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkDadosFisicosActionPerformed(evt);
            }
        });
        jMenu2.add(checkDadosFisicos);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Ayuda");

        ayuda.setText("Manual de uso");
        ayuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ayudaActionPerformed(evt);
            }
        });
        jMenu3.add(ayuda);
        jMenu3.add(jSeparator2);

        jMenuItem7.setText("Sobre nosotros");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        exit();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void checkAbiertasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAbiertasActionPerformed
        settings.setAbiertas(checkAbiertas.isSelected());
    }//GEN-LAST:event_checkAbiertasActionPerformed

    private void ayudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ayudaActionPerformed
        cargarAyuda();
    }//GEN-LAST:event_ayudaActionPerformed

    private void mnuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAbrirActionPerformed
        cargar();
    }//GEN-LAST:event_mnuAbrirActionPerformed

    private void fieldZeonActualKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldZeonActualKeyTyped
        if (evt.getKeyChar() == ('-')){
            evt.consume();
        }else{
            intTextField(evt,fieldZeonActual);
        }
        
        try {
            if (Integer.parseInt(fieldZeonActual.getText()) > this.ficha.getZeon()) {
                fieldZeonActual.setText(String.valueOf(this.ficha.getZeon()));
            }
        } catch(NumberFormatException ex) {
            if (fieldZeonActual.getText().length() == 0) {
                this.ficha.setZeonActual(0);
                barraZeon.setValue(0);
            } else {
                fieldZeonActual.setText(String.valueOf(this.ficha.getZeon()));
                barraZeon.setValue(this.ficha.getZeon());
            }
        }
    }//GEN-LAST:event_fieldZeonActualKeyTyped

    private void fieldCansancioActualKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldCansancioActualKeyTyped
        if (evt.getKeyChar() == ('-')){
            evt.consume();
        }else{
            intTextField(evt,fieldCansancioActual);
        }
        
        try {
            if (Integer.parseInt(fieldCansancioActual.getText()) > this.ficha.getCansancio()) {
                fieldCansancioActual.setText(String.valueOf(this.ficha.getCansancio()));
            }
        } catch(NumberFormatException ex) {
            if (fieldCansancioActual.getText().length() == 0) {
                this.ficha.setCansancioActual(0);
                barraCansancio.setValue(0);
            } else {
                fieldCansancioActual.setText(String.valueOf(this.ficha.getCansancio()));
                barraCansancio.setValue(this.ficha.getCansancio());
            }
        }
    }//GEN-LAST:event_fieldCansancioActualKeyTyped

    private void fieldCansancioActualKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldCansancioActualKeyReleased
        if (fieldCansancioActual.getText().length() == 0)
            return;
        
        try {
            if (Integer.parseInt(fieldCansancioActual.getText()) > Integer.parseInt(fieldCansancio.getText()))
                fieldCansancioActual.setText(fieldCansancio.getText());
        } catch(NumberFormatException ex){
            fieldCansancioActual.setText(fieldCansancio.getText());
        }
        
        int value = 0;
        try{
            this.ficha.setCansancioActual(Integer.parseInt(fieldCansancioActual.getText()));
            value = Integer.parseInt(fieldCansancioActual.getText());
        }
        catch(NumberFormatException ex){value = 0;this.ficha.setCansancioActual(value);}
        finally{barraCansancio.setValue(value);}
    }//GEN-LAST:event_fieldCansancioActualKeyReleased

    private void fieldZeonActualKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldZeonActualKeyReleased
        if (fieldZeonActual.getText().length() == 0)
            return;
        
        try {
            if (Integer.parseInt(fieldZeonActual.getText()) > Integer.parseInt(fieldZeon.getText()))
                fieldZeonActual.setText(fieldZeon.getText());
        } catch(NumberFormatException ex){
            fieldZeonActual.setText(fieldZeon.getText());
        }
        
        int value = 0;
        try{
            this.ficha.setZeonActual(Integer.parseInt(fieldZeonActual.getText()));
            value = Integer.parseInt(fieldZeonActual.getText());
        }
        catch(NumberFormatException ex){value = 0;this.ficha.setZeonActual(value);}
        finally{barraZeon.setValue(value);}
    }//GEN-LAST:event_fieldZeonActualKeyReleased

    private void calcBaseKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calcBaseKeyReleased
        calculadora();
    }//GEN-LAST:event_calcBaseKeyReleased

    private void calcPorcentajeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calcPorcentajeKeyReleased
        calculadora();
    }//GEN-LAST:event_calcPorcentajeKeyReleased

    private void comboCriticoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboCriticoItemStateChanged
        calculadora();
    }//GEN-LAST:event_comboCriticoItemStateChanged

    private void checkArmadura1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkArmadura1MouseReleased
        calculadora();
    }//GEN-LAST:event_checkArmadura1MouseReleased

    private void checkArmadura2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkArmadura2MouseReleased
        calculadora();
    }//GEN-LAST:event_checkArmadura2MouseReleased

    private void checkArmadura3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkArmadura3MouseReleased
        calculadora();
    }//GEN-LAST:event_checkArmadura3MouseReleased

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        
        new Thread () {
            @Override
            public void run() {
                Dicer d = new Dicer(version, settings,new Anima(direccion).start(), direccion);
                d.cargar();
            }
        }.start();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void baseCalcCombKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_baseCalcCombKeyReleased
        calculadoraAtaque();
    }//GEN-LAST:event_baseCalcCombKeyReleased

    private void ventajaCalcCombKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ventajaCalcCombKeyReleased
        calculadoraAtaque();
    }//GEN-LAST:event_ventajaCalcCombKeyReleased

    private void armaduraCalcCombKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_armaduraCalcCombKeyReleased
        calculadoraAtaque();
    }//GEN-LAST:event_armaduraCalcCombKeyReleased

    private void checkCapicuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCapicuaActionPerformed
        settings.setCapicua(checkCapicua.isSelected());
    }//GEN-LAST:event_checkCapicuaActionPerformed

    private void textNotas1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNotas1KeyReleased
        log.setNotas(textNotas1.getText());
    }//GEN-LAST:event_textNotas1KeyReleased

    private void checkDadosFisicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkDadosFisicosActionPerformed
        settings.setFisicos(checkDadosFisicos.isSelected());
        dadosFisicos();
    }//GEN-LAST:event_checkDadosFisicosActionPerformed

    private void damageCriticoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_damageCriticoKeyReleased
        if (settings.getFisicos()) {
            try {
                resCritico.setText(String.valueOf(Integer.parseInt(damageCritico.getText()) + Integer.parseInt(libreCritico.getText()) + Integer.parseInt(dadoCritico.getText())));
            } catch (NumberFormatException ex){}
        }
    }//GEN-LAST:event_damageCriticoKeyReleased

    private void libreCriticoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_libreCriticoKeyReleased
        if (settings.getFisicos()) {
            try {
                resCritico.setText(String.valueOf(Integer.parseInt(damageCritico.getText()) + Integer.parseInt(libreCritico.getText()) + Integer.parseInt(dadoCritico.getText())));
            } catch (NumberFormatException ex){}
        }
    }//GEN-LAST:event_libreCriticoKeyReleased

    private void comprobarExistencia(File archivosSeleccionado, boolean primero) throws CargaException { 
        String path = archivosSeleccionado.getPath();
        
        if(archivosDireccionCargados.containsKey(path))
            throw new CargaException("Esta ficha ya ha sido cargada con anterioridad");
        //Si no estaba en nuestro registro de direcciones lo añadimos al diccionario
        archivosDireccionCargados.put(archivosSeleccionado.getPath(), archivosSeleccionado.getName());
        //Añadimos el nombre a nuestro combo
        Ficha f = new Anima(archivosSeleccionado, direccion).cargar();
        archivosCargados.add(f);
        guardarSinPreguntar.add(false);
        anadirComboNombre(archivosSeleccionado.getName());
    }
    
    private void carga_inicial(File archivo){         
        try{
            comprobarExistencia(archivo, true);
            cargar(archivosCargados.get(comboNombre.getItemCount() - 1));
            comboNombre.setSelectedIndex(comboNombre.getItemCount() - 1);
        }catch(CargaException ex){
            String infoMessage = "La ficha cargada ya existe, se ignorará la operación.";
            String titleBar = "Error de Carga";
            JOptionPane.showMessageDialog(null, infoMessage, titleBar, JOptionPane.INFORMATION_MESSAGE);
        } 
    }

    private void cargar(){
        labelCargar.setVisible(true);
        //Seleccionamos los archivos
        seleccionado.setMultiSelectionEnabled(true);
        
        if (seleccionado.showDialog(null, "Abrir fichas") == JFileChooser.APPROVE_OPTION){
            File[] archivosSeleccionados = seleccionado.getSelectedFiles();
            
            carga_inicial(archivosSeleccionados[0]);

            this.comboNombre.setEnabled(true);
            this.comboEntidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1" }));
            menuGuardar.setEnabled(true);
            menuGuardarComo.setEnabled(true);
            menuGuardarTodo.setEnabled(true);
            duplicarInstancia.setEnabled(true);
            comboEntidad.setEnabled(true);
            textNotas1.setEnabled(true);
            textNotas1.setEditable(true);
            
            new Thread () {
                @Override
                public void run() {
                    for (int i = 1; i < archivosSeleccionados.length; i++) {   
                        try{
                            comprobarExistencia(archivosSeleccionados[i], false);
                        }catch(CargaException ex){
                            String infoMessage = "La ficha cargada ya existe, se ignorará la operación.";
                            String titleBar = "Error de Carga";
                            JOptionPane.showMessageDialog(null, infoMessage, titleBar, JOptionPane.INFORMATION_MESSAGE);
                        } 
                    }      
                }
            }.start();   
        }
        labelCargar.setVisible(false);
        
        
    }
  
    private void menuDescargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDescargarActionPerformed
        new Thread () {
            @Override
            public void run() {
                JFileChooser guardarDesc = new JFileChooser();
                guardarDesc.setFileFilter(new FileNameExtensionFilter("xls & xlsx Excel", "xls", "xlsx"));
                String ruta; 

                if(guardarDesc.showSaveDialog(null)== JFileChooser.APPROVE_OPTION){ 
                    ruta = guardarDesc.getSelectedFile().getAbsolutePath();
                    if (!ruta.endsWith("xlsx")) {
                        ruta = ruta + ".xlsx";
                    }
                    try {
                        jDownload.setVisible(true);
                        Descargar.descargar(ruta);
                        jDownload.setVisible(false);
                    } catch (Exception ex) {
                        Logger.getLogger(Dicer.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }    
            }
        }.start();
    }//GEN-LAST:event_menuDescargarActionPerformed

    private void comboTurnoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboTurnoItemStateChanged
        base_turno.setText(String.valueOf(this.ficha.getTurno(comboTurno.getSelectedIndex())));
    }//GEN-LAST:event_comboTurnoItemStateChanged

    private void comboNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboNombreActionPerformed
        if(!cambioNombres) {
            cargar(archivosCargados.get(comboNombre.getSelectedIndex()));
            
            this.comboEntidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
            for (int i = 1; i < this.ficha.getCopias(); i++) {
                this.comboEntidad.addItem(String.valueOf(i));
            }
            this.comboEntidad.setSelectedIndex(0);
        }
    }//GEN-LAST:event_comboNombreActionPerformed

    private void fieldVidaActualKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldVidaActualKeyTyped
        intTextField(evt,fieldVidaActual);
        
        try {
            if (Integer.parseInt(fieldVidaActual.getText()) > this.ficha.getVida()) {
                fieldVidaActual.setText(String.valueOf(this.ficha.getVida()));
            }
        } catch(NumberFormatException ex) {
            if (fieldVidaActual.getText().length() == 0 || fieldVidaActual.getText().length() == 1 && fieldVidaActual.getText().charAt(0) == '-') {
                this.ficha.setVidaActual(0);
                barraVida.setValue(0);
            } else {
                fieldVidaActual.setText(String.valueOf(this.ficha.getVida()));
                barraVida.setValue(this.ficha.getVida());
            }
        }
    }//GEN-LAST:event_fieldVidaActualKeyTyped

    private void fieldVidaActualKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldVidaActualKeyReleased
        if (fieldVidaActual.getText().length() == 0 || fieldVidaActual.getText().length() == 1 && fieldVidaActual.getText().charAt(0) == '-')
            return;
        
        try {
            if (Integer.parseInt(fieldVidaActual.getText()) > Integer.parseInt(fieldVida.getText())) {
                fieldVidaActual.setText(fieldVida.getText());
            }
        } catch(NumberFormatException ex) {
            fieldVidaActual.setText(fieldVida.getText());
        }
        
        int value = 0;
        try{
            this.ficha.setVidaActual(Integer.parseInt(fieldVidaActual.getText()));
            value = Integer.parseInt(fieldVidaActual.getText());
        }
        catch(NumberFormatException ex){value = 0;this.ficha.setVidaActual(value);}
        finally{barraVida.setValue(value);}
    }//GEN-LAST:event_fieldVidaActualKeyReleased

    private void fieldVidaActualFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldVidaActualFocusLost
        if (fieldVidaActual.getText().length() == 0) {
            fieldVidaActual.setText("0");
            return;
        }
        
        try {
            if (Integer.parseInt(fieldVidaActual.getText()) > this.ficha.getVida()) {
                fieldVidaActual.setText(String.valueOf(this.ficha.getVida()));
            }
        } catch(NumberFormatException ex) {
            fieldVidaActual.setText(String.valueOf(this.ficha.getVida()));
            barraVida.setValue(this.ficha.getVida());
        }
    }//GEN-LAST:event_fieldVidaActualFocusLost

    private void fieldZeonActualFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldZeonActualFocusLost
        if (fieldZeonActual.getText().length() == 0) {
            fieldZeonActual.setText("0");
        }
        
        try {
            if (Integer.parseInt(fieldZeonActual.getText()) > this.ficha.getZeon()) {
                fieldZeonActual.setText(String.valueOf(this.ficha.getZeon()));
            }
        } catch(NumberFormatException ex) {
            fieldZeonActual.setText(String.valueOf(this.ficha.getZeon()));
            barraZeon.setValue(this.ficha.getZeon());
        }
    }//GEN-LAST:event_fieldZeonActualFocusLost

    private void fieldCansancioActualFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldCansancioActualFocusLost
        if (fieldCansancioActual.getText().length() == 0) {
            fieldCansancioActual.setText("0");
        }
        
        try {
            if (Integer.parseInt(fieldCansancioActual.getText()) > this.ficha.getCansancio()) {
                fieldCansancioActual.setText(String.valueOf(this.ficha.getCansancio()));
            }
        } catch(NumberFormatException ex) {
            fieldCansancioActual.setText(String.valueOf(this.ficha.getCansancio()));
            barraCansancio.setValue(this.ficha.getCansancio());
        }
    }//GEN-LAST:event_fieldCansancioActualFocusLost

    private void textNotas1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textNotas1FocusLost
        this.ficha.setNotas(textNotas1.getText());
    }//GEN-LAST:event_textNotas1FocusLost

    private void menuGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuGuardarActionPerformed
        guardar();
    }//GEN-LAST:event_menuGuardarActionPerformed
    
    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        JOptionPane.showMessageDialog(null, "Programa realizado por:\n"
                + "Fernando Pérez Gutiérrez: Creador y programador principal.\n"
                + "Alfredo Pérez Gutiérrez: Tester y creador de las fichas.\n"
                + "Juan Mas Aguilar: Tester y programador secundario.\n"
                + "GitHub: https://github.com/TheCorPlay/AnimaDicer");
    }//GEN-LAST:event_jMenuItem7ActionPerformed
    
    private void fieldKiActualFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldKiActualFocusLost
        if (fieldKiActual.getText().length() == 0) {
            fieldKiActual.setText("0");
        }
        
        try {
            if (Integer.parseInt(fieldKiActual.getText()) > this.ficha.getKi()) {
                fieldKiActual.setText(String.valueOf(this.ficha.getKi()));
            }
        } catch(NumberFormatException ex) {
            fieldKiActual.setText(String.valueOf(this.ficha.getKi()));
            barraKi.setValue(this.ficha.getKi());
        }
    }//GEN-LAST:event_fieldKiActualFocusLost

    private void fieldKiActualKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldKiActualKeyReleased
        if (fieldKiActual.getText().length() == 0)
            return;
        
        try {
            if (Integer.parseInt(fieldKiActual.getText()) > Integer.parseInt(fieldKi.getText()))
                fieldKiActual.setText(fieldKi.getText());
        } catch(NumberFormatException ex){
            fieldKiActual.setText(fieldKi.getText());
        }
        
        int value = 0;
        try{
            this.ficha.setKiActual(Integer.parseInt(fieldKiActual.getText()));
            value = Integer.parseInt(fieldKiActual.getText());
        }
        catch(NumberFormatException ex){value = 0;this.ficha.setKiActual(value);}
        finally{barraKi.setValue(value);}
    }//GEN-LAST:event_fieldKiActualKeyReleased

    private void fieldKiActualKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldKiActualKeyTyped
        if (evt.getKeyChar() == ('-')){
            evt.consume();
        }else{
            intTextField(evt,fieldKiActual);
        }
        
        try {
            if (Integer.parseInt(fieldKiActual.getText()) > this.ficha.getKi()) {
                fieldKiActual.setText(String.valueOf(this.ficha.getKi()));
            }
        } catch(NumberFormatException ex) {
            if (fieldKiActual.getText().length() == 0) {
                this.ficha.setKiActual(0);
                barraKi.setValue(0);
            } else {
                fieldKiActual.setText(String.valueOf(this.ficha.getKi()));
                barraKi.setValue(this.ficha.getKi());
            }
        }
    }//GEN-LAST:event_fieldKiActualKeyTyped

    private void menuGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuGuardarComoActionPerformed
        labelCargar.setVisible(true);
        JFileChooser guardarDesc = new JFileChooser(this.ficha.getPath());
        guardarDesc.setFileFilter(new FileNameExtensionFilter("JSON Files", "json"));
        
        if(guardarDesc.showSaveDialog(null)== JFileChooser.APPROVE_OPTION){ 
            new Thread() {
                @Override
                public void run() {
                    String ruta = guardarDesc.getSelectedFile().getAbsolutePath();
                    if (!ruta.endsWith("json")) {
                        ruta = ruta + ".json";
                    }
                    FileJSON.exportJason(ruta, ficha);
                    guardarSinPreguntar.set(comboNombre.getSelectedIndex(), true);
                    ficha.setPath(ruta);
                    labelCargar.setVisible(false);
                }
            }.start();
        }
    }//GEN-LAST:event_menuGuardarComoActionPerformed

    private void checkArmadura4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkArmadura4MouseReleased
        calculadora();
    }//GEN-LAST:event_checkArmadura4MouseReleased

    private void menuGuardarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuGuardarTodoActionPerformed
        int i = 0;
        for (Ficha f: archivosCargados) {
            guardar(f,i);
            i++;
        }
    }//GEN-LAST:event_menuGuardarTodoActionPerformed

    private void fieldVidaActualFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldVidaActualFocusGained
        fieldVidaActual.setSelectionStart(0);
        fieldVidaActual.setSelectionEnd(fieldVidaActual.getText().length());
    }//GEN-LAST:event_fieldVidaActualFocusGained

    private void fieldZeonActualFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldZeonActualFocusGained
        fieldZeonActual.setSelectionStart(0);
        fieldZeonActual.setSelectionEnd(fieldZeonActual.getText().length());
    }//GEN-LAST:event_fieldZeonActualFocusGained

    private void fieldKiActualFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldKiActualFocusGained
        fieldKiActual.setSelectionStart(0);
        fieldKiActual.setSelectionEnd(fieldKiActual.getText().length());
    }//GEN-LAST:event_fieldKiActualFocusGained

    private void fieldCansancioActualFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldCansancioActualFocusGained
        fieldCansancioActual.setSelectionStart(0);
        fieldCansancioActual.setSelectionEnd(fieldCansancioActual.getText().length());
    }//GEN-LAST:event_fieldCansancioActualFocusGained

    private void duplicarInstanciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duplicarInstanciaActionPerformed
        String respuesta = JOptionPane.showInputDialog(null, "¿Cuantos instancias nuevas desea crear?", "1");
        try {
            int dup = Integer.parseInt(respuesta);
            this.ficha.aumentarCopias(dup);
            int ini = comboEntidad.getItemCount();
            for (int i = 0; i < dup; i++) {
                comboEntidad.addItem(String.valueOf(i+ini+1));
            }
        } catch(NumberFormatException ex) {
            
        }        
    }//GEN-LAST:event_duplicarInstanciaActionPerformed

    private void comboEntidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEntidadActionPerformed
        this.ficha.setSeleccionado(Math.max(this.comboEntidad.getSelectedIndex(),0));
        fieldVidaActual.setText(String.valueOf(this.ficha.getVidaActual()));
        fieldZeonActual.setText(String.valueOf(this.ficha.getZeonActual()));
        fieldKiActual.setText(String.valueOf(this.ficha.getKiActual()));
        fieldCansancioActual.setText(String.valueOf(this.ficha.getCansancioActual()));
        barraVida.setValue(ficha.getVidaActual());
        barraKi.setValue(ficha.getKiActual());
        barraZeon.setValue(ficha.getZeonActual());
        barraCansancio.setValue(ficha.getCansancioActual());
    }//GEN-LAST:event_comboEntidadActionPerformed

    private boolean guardarTodo() {
        if (preguntarGuardar()) {
            int i = 0;
            for (Ficha f: archivosCargados) {
                guardar(f,i);
                i++;
            }
        } else {
            int opt = JOptionPane.showConfirmDialog(null, "¿Quieres guardar todas las fichas abiertas?", "Guardar JSON", JOptionPane.YES_NO_CANCEL_OPTION);
            if(opt == JOptionPane.YES_OPTION){
                int i = 0;
                for (Ficha f: archivosCargados) {
                    guardar(f,i);
                    i++;
                }
            } else if (opt == JOptionPane.CANCEL_OPTION) {
                return false;
            }
        }
        
        return true;
    }
    
    private void intTextField(java.awt.event.KeyEvent evt, JTextField field) {
        char vchar = evt.getKeyChar();
        if (!Character.isDigit(vchar) || vchar == KeyEvent.VK_BACK_SPACE || vchar == KeyEvent.VK_DELETE) {
            evt.consume();
        }
        if (vchar == '-') {
            if (field.getText().length() == 0) {
                field.setText("-");
                return;
            }
            
            if (field.getText().charAt(0) == '-') {
                field.setText(field.getText().substring(1,field.getText().length()));
            } else {
                field.setText('-' + field.getText());
            }
        } else if (vchar == '+') {
            if (field.getText().length() > 0 && field.getText().charAt(0) == '-') {
                field.setText(field.getText().substring(1,field.getText().length()));
            }
        }
    }
    
    private void calculadora() {
        int base = 0;
        int ventaja = 100;
        int critico = comboCritico.getSelectedIndex();
        int armadura = 0;
        int res;
        
        try {
            base = Integer.parseInt(calcBase.getText());
        } catch(NumberFormatException ex) {}
        try {
            ventaja = Integer.parseInt(calcPorcentaje.getText());
        } catch(NumberFormatException ex) {}
        
        if (checkArmadura1.isSelected()) {
            armadura += this.ficha.getArmadura(0).getDefensa(critico);
        }
        if (checkArmadura2.isSelected()) {
            armadura += this.ficha.getArmadura(1).getDefensa(critico);
        }
        if (checkArmadura3.isSelected()) {
            armadura += this.ficha.getArmadura(2).getDefensa(critico);
        }
        if (checkArmadura4.isSelected()) {
            armadura += this.ficha.getArmadura(3).getDefensa(critico);
        }
        
        try {
            // coje las armaduras que no estan
            switch (comboCritico.getSelectedIndex()) {
                case 0:
                    armadura += Integer.parseInt(filArmadura[4].getText());
                    break;
                case 1:
                    armadura += Integer.parseInt(conArmadura[4].getText());
                    break;
                case 2:
                    armadura += Integer.parseInt(penArmadura[4].getText());
                    break;
                case 3:
                    armadura += Integer.parseInt(calArmadura[4].getText());
                    break;
                case 4:
                    armadura += Integer.parseInt(eleArmadura[4].getText());
                    break;
                case 5:
                    armadura += Integer.parseInt(friArmadura[4].getText());
                    break;
                case 6:
                    armadura += Integer.parseInt(enerArmadura[4].getText());
                    break;
                default:
                    break;
            }
            
        } catch (NumberFormatException ex) {
            
        }
        
        // Ahora ya tengo todos los datos, puedo empezar a calcular
        if (ventaja < 0) { // Si te hacen contra
            res = ((int)Math.floor(ventaja/10.0) + 1)*(-5);
            calcFinal.setText("C de +" + res);
        } else { // Si no
            switch (armadura) {
                case 0:
                    if (ventaja < 60) {
                        if (ventaja < 30){
                            calcFinal.setText("0");
                        }else if (ventaja < 40) {
                            calcFinal.setText("10");
                        } else if (ventaja < 50) {
                            calcFinal.setText("30");
                        } else {
                            calcFinal.setText("50");
                        }
                    } else {
                        res = (int)Math.floor(ventaja/10.0)*10;
                        res = (int)((res/100.0)*base);
                        calcFinal.setText(String.valueOf(res));
                    }
                    break;
                case 1:
                    if (ventaja < 50) {
                        if (ventaja < 30) {
                            calcFinal.setText("0");
                        } else if (ventaja < 40) {
                            calcFinal.setText("10");
                        } else {
                            calcFinal.setText("20");
                        }
                    } else {
                        res = ((int)Math.floor(ventaja/10.0)*10) - 10;
                        res = (int)((res/100.0)*base);
                        calcFinal.setText(String.valueOf(res));
                    }
                    break;
                default:
                    res = ((int)Math.floor(ventaja/10.0)*10) - 10*armadura;
                    if (res < 0)
                        res = 0;
                    res = (int)((res/100.0)*base);
                    calcFinal.setText(String.valueOf(res));
                    break;
            }
        }
        
    }
    
    private void calculadoraAtaque() {
        int base = 0, ventaja = 0, armadura = 0;
        int res;
        
        try {
            base = Integer.parseInt(baseCalcComb.getText());
        } catch (NumberFormatException ex) {}
        try {
            ventaja = Integer.parseInt(ventajaCalcComb.getText());
        } catch (NumberFormatException ex) {}
        try {
            armadura = Integer.parseInt(armaduraCalcComb.getText());
        } catch (NumberFormatException ex) {}
        
        // Ahora ya tengo todos los datos, puedo empezar a calcular
        if (ventaja < 0) { // Si te hacen contra
            res = ((int)Math.floor(ventaja/10.0) + 1)*(-5);
            finalCalcComb.setText("C de +" + res);
        } else { // Si no
            switch (armadura) {
                case 0:
                    if (ventaja < 60) {
                        if (ventaja < 30){
                            finalCalcComb.setText("0");
                        }else if (ventaja < 40) {
                            finalCalcComb.setText("10");
                        } else if (ventaja < 50) {
                            finalCalcComb.setText("30");
                        } else {
                            finalCalcComb.setText("50");
                        }
                    } else {
                        res = (int)Math.floor(ventaja/10.0)*10;
                        res = (int)((res/100.0)*base);
                        finalCalcComb.setText(String.valueOf(res));
                    }
                    break;
                case 1:
                    if (ventaja < 50) {
                        if (ventaja < 30) {
                            finalCalcComb.setText("0");
                        } else if (ventaja < 40) {
                            finalCalcComb.setText("10");
                        } else {
                            finalCalcComb.setText("20");
                        }
                    } else {
                        res = ((int)Math.floor(ventaja/10.0)*10) - 10;
                        res = (int)((res/100.0)*base);
                        finalCalcComb.setText(String.valueOf(res));
                    }
                    break;
                default:
                    res = ((int)Math.floor(ventaja/10.0)*10) - 10*armadura;
                    if (res < 0)
                        res = 0;
                    res = (int)((res/100.0)*base);
                    finalCalcComb.setText(String.valueOf(res));
                    break;
            }
        }
    }
    
    //muestra una ficha ya cargada
    private void cargar(Ficha ficha) {      
        this.ficha = ficha;
        darValores(ficha);
    }
    
    private void darValores(Ficha ficha) {
        valuesPrincipales(ficha);
        valuesSecundarias(ficha);
        valuesResistencias(ficha);
        valuesArmaduras();
        valuesArmas();
        valuesCombate(ficha);
        calculadora();
        textNotas1.setText(ficha.getNotas());

        log.resetLog(ficha.getLog());
        log.setNotas(ficha.getNotas());

        resetColors();

        this.setTitle("Anima Dicer " + this.version + " - " + fieldNombre.getText());
    }

    private final Settings settings;
    private final Log log;
    public File archivo;
    private Ficha ficha;
    private final String direccion;
    
    private JLabel b_Atributos[];
    private JTextField base_Atributos[];
    private JTextField libre_Atributos[];
    private JTextField dado_Atributos[];
    private JTextField res_Atributos[];
    
    private JLabel b_Secundarias[];
    private JTextField base_Secundarias[];
    private JTextField libre_Secundarias[];
    private JTextField dado_Secundarias[];
    private JTextField res_Secundarias[];
    
    private JLabel b_Resistencias[];
    private JTextField base_Resistencias[];
    private JTextField libre_Resistencias[];
    private JTextField dado_Resistencias[];
    private JTextField res_Resistencias[];
    
    private JTextField nombreArmadura[];
    private JTextField filArmadura[];
    private JTextField conArmadura[];
    private JTextField penArmadura[];
    private JTextField calArmadura[];
    private JTextField eleArmadura[];
    private JTextField friArmadura[];
    private JTextField enerArmadura[];
    private JTextField posArmadura[]; 
    
    private ArmaGUI armas[]; 
    
    private JLabel b_combateFisico[];
    private JTextField base_combateFisico[];
    private JTextField libre_combateFisico[];
    private JTextField dado_combateFisico[];
    private JTextField res_combateFisico[];
    
    private JLabel b_turno;
    private JTextField base_turno;
    private JTextField libre_turno;
    private JTextField dado_turno;
    private JTextField res_turno;
    
    private JLabel b_combateSobrenatural[];
    private JTextField base_combateSobrenatural[];
    private JTextField libre_combateSobrenatural[];
    private JTextField dado_combateSobrenatural[];
    private JTextField res_combateSobrenatural[];
    
    private JLabel b_convocatoria[];
    private JTextField base_convocatoria[];
    private JTextField libre_convocatoria[];
    private JTextField dado_convocatoria[];
    private JTextField res_convocatoria[];
    
    private JLabel bDadoCritico;
    
    private javax.swing.JFileChooser seleccionado;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField armaduraCalcComb;
    private javax.swing.JMenuItem ayuda;
    private javax.swing.JProgressBar barraCansancio;
    private javax.swing.JProgressBar barraKi;
    private javax.swing.JProgressBar barraVida;
    private javax.swing.JProgressBar barraZeon;
    private javax.swing.JTextField baseCalcComb;
    private javax.swing.JTextField calcBase;
    private javax.swing.JTextField calcFinal;
    private javax.swing.JTextField calcPorcentaje;
    private javax.swing.JCheckBoxMenuItem checkAbiertas;
    private javax.swing.JCheckBox checkArmadura1;
    private javax.swing.JCheckBox checkArmadura2;
    private javax.swing.JCheckBox checkArmadura3;
    private javax.swing.JCheckBox checkArmadura4;
    private javax.swing.JCheckBoxMenuItem checkCapicua;
    private javax.swing.JCheckBoxMenuItem checkDadosFisicos;
    private javax.swing.JComboBox<String> comboCritico;
    private javax.swing.JComboBox<String> comboEntidad;
    private javax.swing.JComboBox<String> comboNombre;
    private javax.swing.JComboBox<String> comboTurno;
    private javax.swing.JTextField dadoCritico;
    private javax.swing.JTextField damageCritico;
    private javax.swing.JMenuItem duplicarInstancia;
    private javax.swing.JTextField fieldCansancio;
    private javax.swing.JTextField fieldCansancioActual;
    private javax.swing.JTextField fieldCategoria;
    private javax.swing.JTextField fieldKi;
    private javax.swing.JTextField fieldKiActual;
    private javax.swing.JTextField fieldNivel;
    private javax.swing.JTextField fieldNombre;
    private javax.swing.JTextField fieldVida;
    private javax.swing.JTextField fieldVidaActual;
    private javax.swing.JTextField fieldZeon;
    private javax.swing.JTextField fieldZeonActual;
    private javax.swing.JTextField finalCalcComb;
    private javax.swing.JLabel jDownload;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel122;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel127;
    private javax.swing.JLabel jLabel128;
    private javax.swing.JLabel jLabel129;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel130;
    private javax.swing.JLabel jLabel132;
    private javax.swing.JLabel jLabel133;
    private javax.swing.JLabel jLabel134;
    private javax.swing.JLabel jLabel135;
    private javax.swing.JLabel jLabel136;
    private javax.swing.JLabel jLabel137;
    private javax.swing.JLabel jLabel138;
    private javax.swing.JLabel jLabel139;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel140;
    private javax.swing.JLabel jLabel141;
    private javax.swing.JLabel jLabel142;
    private javax.swing.JLabel jLabel143;
    private javax.swing.JLabel jLabel144;
    private javax.swing.JLabel jLabel145;
    private javax.swing.JLabel jLabel146;
    private javax.swing.JLabel jLabel147;
    private javax.swing.JLabel jLabel148;
    private javax.swing.JLabel jLabel149;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel150;
    private javax.swing.JLabel jLabel151;
    private javax.swing.JLabel jLabel152;
    private javax.swing.JLabel jLabel153;
    private javax.swing.JLabel jLabel154;
    private javax.swing.JLabel jLabel155;
    private javax.swing.JLabel jLabel156;
    private javax.swing.JLabel jLabel157;
    private javax.swing.JLabel jLabel158;
    private javax.swing.JLabel jLabel159;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel160;
    private javax.swing.JLabel jLabel161;
    private javax.swing.JLabel jLabel162;
    private javax.swing.JLabel jLabel163;
    private javax.swing.JLabel jLabel164;
    private javax.swing.JLabel jLabel165;
    private javax.swing.JLabel jLabel166;
    private javax.swing.JLabel jLabel167;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel174;
    private javax.swing.JLabel jLabel175;
    private javax.swing.JLabel jLabel176;
    private javax.swing.JLabel jLabel177;
    private javax.swing.JLabel jLabel178;
    private javax.swing.JLabel jLabel179;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel180;
    private javax.swing.JLabel jLabel181;
    private javax.swing.JLabel jLabel182;
    private javax.swing.JLabel jLabel183;
    private javax.swing.JLabel jLabel184;
    private javax.swing.JLabel jLabel185;
    private javax.swing.JLabel jLabel186;
    private javax.swing.JLabel jLabel187;
    private javax.swing.JLabel jLabel188;
    private javax.swing.JLabel jLabel189;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel190;
    private javax.swing.JLabel jLabel191;
    private javax.swing.JLabel jLabel192;
    private javax.swing.JLabel jLabel193;
    private javax.swing.JLabel jLabel194;
    private javax.swing.JLabel jLabel195;
    private javax.swing.JLabel jLabel196;
    private javax.swing.JLabel jLabel197;
    private javax.swing.JLabel jLabel198;
    private javax.swing.JLabel jLabel199;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel200;
    private javax.swing.JLabel jLabel201;
    private javax.swing.JLabel jLabel202;
    private javax.swing.JLabel jLabel203;
    private javax.swing.JLabel jLabel204;
    private javax.swing.JLabel jLabel205;
    private javax.swing.JLabel jLabel206;
    private javax.swing.JLabel jLabel207;
    private javax.swing.JLabel jLabel208;
    private javax.swing.JLabel jLabel209;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel210;
    private javax.swing.JLabel jLabel211;
    private javax.swing.JLabel jLabel212;
    private javax.swing.JLabel jLabel213;
    private javax.swing.JLabel jLabel214;
    private javax.swing.JLabel jLabel215;
    private javax.swing.JLabel jLabel216;
    private javax.swing.JLabel jLabel217;
    private javax.swing.JLabel jLabel218;
    private javax.swing.JLabel jLabel219;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel220;
    private javax.swing.JLabel jLabel221;
    private javax.swing.JLabel jLabel222;
    private javax.swing.JLabel jLabel223;
    private javax.swing.JLabel jLabel224;
    private javax.swing.JLabel jLabel225;
    private javax.swing.JLabel jLabel226;
    private javax.swing.JLabel jLabel227;
    private javax.swing.JLabel jLabel228;
    private javax.swing.JLabel jLabel229;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel230;
    private javax.swing.JLabel jLabel231;
    private javax.swing.JLabel jLabel232;
    private javax.swing.JLabel jLabel233;
    private javax.swing.JLabel jLabel234;
    private javax.swing.JLabel jLabel235;
    private javax.swing.JLabel jLabel236;
    private javax.swing.JLabel jLabel237;
    private javax.swing.JLabel jLabel238;
    private javax.swing.JLabel jLabel239;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel240;
    private javax.swing.JLabel jLabel241;
    private javax.swing.JLabel jLabel242;
    private javax.swing.JLabel jLabel243;
    private javax.swing.JLabel jLabel244;
    private javax.swing.JLabel jLabel245;
    private javax.swing.JLabel jLabel246;
    private javax.swing.JLabel jLabel247;
    private javax.swing.JLabel jLabel248;
    private javax.swing.JLabel jLabel249;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel250;
    private javax.swing.JLabel jLabel251;
    private javax.swing.JLabel jLabel252;
    private javax.swing.JLabel jLabel253;
    private javax.swing.JLabel jLabel254;
    private javax.swing.JLabel jLabel255;
    private javax.swing.JLabel jLabel256;
    private javax.swing.JLabel jLabel257;
    private javax.swing.JLabel jLabel258;
    private javax.swing.JLabel jLabel259;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel260;
    private javax.swing.JLabel jLabel261;
    private javax.swing.JLabel jLabel262;
    private javax.swing.JLabel jLabel263;
    private javax.swing.JLabel jLabel264;
    private javax.swing.JLabel jLabel265;
    private javax.swing.JLabel jLabel266;
    private javax.swing.JLabel jLabel267;
    private javax.swing.JLabel jLabel268;
    private javax.swing.JLabel jLabel269;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel270;
    private javax.swing.JLabel jLabel271;
    private javax.swing.JLabel jLabel272;
    private javax.swing.JLabel jLabel273;
    private javax.swing.JLabel jLabel274;
    private javax.swing.JLabel jLabel275;
    private javax.swing.JLabel jLabel276;
    private javax.swing.JLabel jLabel277;
    private javax.swing.JLabel jLabel278;
    private javax.swing.JLabel jLabel279;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel280;
    private javax.swing.JLabel jLabel281;
    private javax.swing.JLabel jLabel282;
    private javax.swing.JLabel jLabel283;
    private javax.swing.JLabel jLabel284;
    private javax.swing.JLabel jLabel285;
    private javax.swing.JLabel jLabel286;
    private javax.swing.JLabel jLabel287;
    private javax.swing.JLabel jLabel288;
    private javax.swing.JLabel jLabel289;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel290;
    private javax.swing.JLabel jLabel291;
    private javax.swing.JLabel jLabel292;
    private javax.swing.JLabel jLabel293;
    private javax.swing.JLabel jLabel294;
    private javax.swing.JLabel jLabel295;
    private javax.swing.JLabel jLabel296;
    private javax.swing.JLabel jLabel297;
    private javax.swing.JLabel jLabel298;
    private javax.swing.JLabel jLabel299;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel300;
    private javax.swing.JLabel jLabel301;
    private javax.swing.JLabel jLabel302;
    private javax.swing.JLabel jLabel303;
    private javax.swing.JLabel jLabel304;
    private javax.swing.JLabel jLabel305;
    private javax.swing.JLabel jLabel306;
    private javax.swing.JLabel jLabel307;
    private javax.swing.JLabel jLabel308;
    private javax.swing.JLabel jLabel309;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel310;
    private javax.swing.JLabel jLabel311;
    private javax.swing.JLabel jLabel312;
    private javax.swing.JLabel jLabel313;
    private javax.swing.JLabel jLabel314;
    private javax.swing.JLabel jLabel315;
    private javax.swing.JLabel jLabel316;
    private javax.swing.JLabel jLabel317;
    private javax.swing.JLabel jLabel318;
    private javax.swing.JLabel jLabel319;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel320;
    private javax.swing.JLabel jLabel321;
    private javax.swing.JLabel jLabel322;
    private javax.swing.JLabel jLabel323;
    private javax.swing.JLabel jLabel324;
    private javax.swing.JLabel jLabel325;
    private javax.swing.JLabel jLabel326;
    private javax.swing.JLabel jLabel327;
    private javax.swing.JLabel jLabel328;
    private javax.swing.JLabel jLabel329;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel330;
    private javax.swing.JLabel jLabel331;
    private javax.swing.JLabel jLabel332;
    private javax.swing.JLabel jLabel333;
    private javax.swing.JLabel jLabel334;
    private javax.swing.JLabel jLabel335;
    private javax.swing.JLabel jLabel336;
    private javax.swing.JLabel jLabel337;
    private javax.swing.JLabel jLabel338;
    private javax.swing.JLabel jLabel339;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel340;
    private javax.swing.JLabel jLabel341;
    private javax.swing.JLabel jLabel342;
    private javax.swing.JLabel jLabel343;
    private javax.swing.JLabel jLabel344;
    private javax.swing.JLabel jLabel345;
    private javax.swing.JLabel jLabel346;
    private javax.swing.JLabel jLabel347;
    private javax.swing.JLabel jLabel348;
    private javax.swing.JLabel jLabel349;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel350;
    private javax.swing.JLabel jLabel351;
    private javax.swing.JLabel jLabel352;
    private javax.swing.JLabel jLabel353;
    private javax.swing.JLabel jLabel354;
    private javax.swing.JLabel jLabel355;
    private javax.swing.JLabel jLabel356;
    private javax.swing.JLabel jLabel357;
    private javax.swing.JLabel jLabel358;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel362;
    private javax.swing.JLabel jLabel363;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel l_Acrobacias;
    private javax.swing.JLabel l_Acrobacias1;
    private javax.swing.JLabel l_Acrobacias10;
    private javax.swing.JLabel l_Acrobacias11;
    private javax.swing.JLabel l_Acrobacias12;
    private javax.swing.JLabel l_Acrobacias13;
    private javax.swing.JLabel l_Acrobacias14;
    private javax.swing.JLabel l_Acrobacias15;
    private javax.swing.JLabel l_Acrobacias16;
    private javax.swing.JLabel l_Acrobacias17;
    private javax.swing.JLabel l_Acrobacias18;
    private javax.swing.JLabel l_Acrobacias19;
    private javax.swing.JLabel l_Acrobacias2;
    private javax.swing.JLabel l_Acrobacias20;
    private javax.swing.JLabel l_Acrobacias21;
    private javax.swing.JLabel l_Acrobacias22;
    private javax.swing.JLabel l_Acrobacias23;
    private javax.swing.JLabel l_Acrobacias24;
    private javax.swing.JLabel l_Acrobacias25;
    private javax.swing.JLabel l_Acrobacias26;
    private javax.swing.JLabel l_Acrobacias27;
    private javax.swing.JLabel l_Acrobacias28;
    private javax.swing.JLabel l_Acrobacias29;
    private javax.swing.JLabel l_Acrobacias3;
    private javax.swing.JLabel l_Acrobacias30;
    private javax.swing.JLabel l_Acrobacias31;
    private javax.swing.JLabel l_Acrobacias32;
    private javax.swing.JLabel l_Acrobacias33;
    private javax.swing.JLabel l_Acrobacias34;
    private javax.swing.JLabel l_Acrobacias35;
    private javax.swing.JLabel l_Acrobacias36;
    private javax.swing.JLabel l_Acrobacias4;
    private javax.swing.JLabel l_Acrobacias5;
    private javax.swing.JLabel l_Acrobacias6;
    private javax.swing.JLabel l_Acrobacias7;
    private javax.swing.JLabel l_Acrobacias8;
    private javax.swing.JLabel l_Acrobacias9;
    private javax.swing.JLabel l_Atletismo;
    private javax.swing.JLabel labelCargar;
    private javax.swing.JLabel lbl_titulo;
    private javax.swing.JTextField libreCritico;
    private javax.swing.JMenuItem menuDescargar;
    private javax.swing.JMenuItem menuGuardar;
    private javax.swing.JMenuItem menuGuardarComo;
    private javax.swing.JMenuItem menuGuardarTodo;
    private javax.swing.JMenuItem mnuAbrir;
    private javax.swing.JTextField posCritico;
    private javax.swing.JTextField resCritico;
    private javax.swing.JTextArea textNotas;
    private javax.swing.JTextArea textNotas1;
    private javax.swing.JTextField ventajaCalcComb;
    // End of variables declaration//GEN-END:variables

    private void initPrincipales() {
        this.b_Atributos = new JLabel[8];
        this.base_Atributos = new JTextField[8];
        this.libre_Atributos = new JTextField[8];
        this.dado_Atributos = new JTextField[8];
        this.res_Atributos = new JTextField[8];
        
        for (int i = 0; i < 8; i++) {
            b_Atributos[i] = new javax.swing.JLabel();
            b_Atributos[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton.png")));
            
            b_Atributos[i].addMouseListener(new java.awt.event.MouseAdapter() {
                JLabel j;
                int number;
                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    ficha.addLog(log.addLog(log.queBoton("Atributos", number) + ": " + b_MouseClickedAtr(evt, number)));
                }
                @Override
                public void mouseEntered(java.awt.event.MouseEvent evt) {
                    b_MouseEntered(evt,j);
                }
                @Override
                public void mouseExited(java.awt.event.MouseEvent evt) {
                    b_MouseExited(evt,j);
                }
                @Override
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    b_MousePressed(evt,j);
                }
                @Override
                public void mouseReleased(java.awt.event.MouseEvent evt) {
                    b_MouseEntered(evt,j);
                }
                
                public MouseListener init (JLabel i, int number) {
                    this.j = i;
                    this.number = number;
                    return this;
                }
            }.init(b_Atributos[i],i));
            
            base_Atributos[i] = new javax.swing.JTextField();
            base_Atributos[i].setHorizontalAlignment(JTextField.CENTER);
            base_Atributos[i].setEditable(false);
            libre_Atributos[i] = new javax.swing.JTextField();
            libre_Atributos[i].setHorizontalAlignment(JTextField.CENTER);
            libre_Atributos[i].addKeyListener(new java.awt.event.KeyAdapter() {
                JTextField f;
                @Override
                public void keyTyped(java.awt.event.KeyEvent evt) {
                    intTextField(evt,f);
                }
                
                public KeyListener init(JTextField f) {
                    this.f = f;
                    return this;
                }
                
            }.init(libre_Atributos[i]));
            
            
            dado_Atributos[i] = new javax.swing.JTextField();
            dado_Atributos[i].setEditable(false);
            dado_Atributos[i].setHorizontalAlignment(JTextField.CENTER);
            res_Atributos[i] = new javax.swing.JTextField();
            res_Atributos[i].setEditable(false);
            res_Atributos[i].setHorizontalAlignment(JTextField.CENTER);
            res_Atributos[i].setFont(res_Atributos[i].getFont().deriveFont(Font.BOLD));
            
            jPanel7.add(b_Atributos[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50+(i*21), -1, -1));
            jPanel7.add(base_Atributos[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 50+(i*21), 40, 20));
            jPanel7.add(libre_Atributos[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 50+(i*21), 40, 20));
            jPanel7.add(dado_Atributos[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 50+(i*21), 40, 20));
            jPanel7.add(res_Atributos[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 50+(i*21), 50, 20));
        }   
        valuesPrincipales(this.ficha);
    }
    
    private void initSecundarias() {
        b_Secundarias = new JLabel[38];
        base_Secundarias = new JTextField[38];
        libre_Secundarias = new JTextField[38];
        dado_Secundarias = new JTextField[38];
        res_Secundarias = new JTextField[38];
        
        for (int i = 0; i < 38; i++) {
            b_Secundarias[i] = new javax.swing.JLabel();
            b_Secundarias[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton.png"))); // NOI18N
            b_Secundarias[i].addMouseListener(new java.awt.event.MouseAdapter() {
                JLabel j;
                int number;
                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    ficha.addLog(log.addLog(log.queBoton("Secundarias", number) + ": " + b_MouseClicked(evt, number)));
                }
                @Override
                public void mouseEntered(java.awt.event.MouseEvent evt) {
                    b_MouseEntered(evt,j);
                }
                @Override
                public void mouseExited(java.awt.event.MouseEvent evt) {
                    b_MouseExited(evt,j);
                }
                @Override
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    b_MousePressed(evt,j);
                }
                @Override
                public void mouseReleased(java.awt.event.MouseEvent evt) {
                    b_MouseEntered(evt,j);
                }
                
                public MouseListener init (JLabel i, int number) {
                    this.j = i;
                    this.number = number;
                    return this;
                }
            }.init(b_Secundarias[i],i));

            base_Secundarias[i] = new javax.swing.JTextField();
            base_Secundarias[i].setHorizontalAlignment(JTextField.CENTER);
            base_Secundarias[i].setEditable(false);
            libre_Secundarias[i] = new javax.swing.JTextField();
            libre_Secundarias[i].setHorizontalAlignment(JTextField.CENTER);
            
            libre_Secundarias[i].addKeyListener(new java.awt.event.KeyAdapter() {
                JTextField f;
                @Override
                public void keyTyped(java.awt.event.KeyEvent evt) {
                    intTextField(evt,f);
                }
                
                public KeyListener init(JTextField f) {
                    this.f = f;
                    return this;
                }
                
            }.init(libre_Secundarias[i]));
            
            dado_Secundarias[i] = new javax.swing.JTextField();
            dado_Secundarias[i].setEditable(false);
            dado_Secundarias[i].setHorizontalAlignment(JTextField.CENTER);
            res_Secundarias[i] = new javax.swing.JTextField();
            res_Secundarias[i].setEditable(false);
            res_Secundarias[i].setHorizontalAlignment(JTextField.CENTER);
            res_Secundarias[i].setFont(res_Secundarias[i].getFont().deriveFont(Font.BOLD));
            
            if (i < 19) {
                jPanel2.add(b_Secundarias[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20+(i*21), -1, -1));
                jPanel2.add(base_Secundarias[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20+(i*21), 30, 20));
                jPanel2.add(libre_Secundarias[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20+(i*21), 30, 20));
                jPanel2.add(dado_Secundarias[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20+(i*21), 30, 20));
                jPanel2.add(res_Secundarias[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 20+(i*21), 30, 20));
            } else {
                jPanel2.add(b_Secundarias[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20+((i-19)*21), -1, -1));
                jPanel2.add(base_Secundarias[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20+((i-19)*21), 30, 20));
                jPanel2.add(libre_Secundarias[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20+((i-19)*21), 30, 20));
                jPanel2.add(dado_Secundarias[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20+((i-19)*21), 30, 20));
                jPanel2.add(res_Secundarias[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 20+((i-19)*21), 30, 20));
            }
        }
        
        valuesSecundarias(this.ficha);
    }
    
    private void initResistencias() {
        b_Resistencias = new JLabel[5];
        base_Resistencias = new JTextField[5];
        libre_Resistencias = new JTextField[5];
        dado_Resistencias = new JTextField[5];
        res_Resistencias = new JTextField[5];
        
        for (int i = 0; i < 5; i++) {
            b_Resistencias[i] = new javax.swing.JLabel();
            b_Resistencias[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton.png")));
            
            b_Resistencias[i].addMouseListener(new java.awt.event.MouseAdapter() {
                JLabel j;
                int number;
                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    ficha.addLog(log.addLog(log.queBoton("Resistencias", number) + ": " + b_MouseClickedRes(evt, number)));
                }
                @Override
                public void mouseEntered(java.awt.event.MouseEvent evt) {
                    b_MouseEntered(evt,j);
                }
                @Override
                public void mouseExited(java.awt.event.MouseEvent evt) {
                    b_MouseExited(evt,j);
                }
                @Override
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    b_MousePressed(evt,j);
                }
                @Override
                public void mouseReleased(java.awt.event.MouseEvent evt) {
                    b_MouseEntered(evt,j);
                }
                
                public MouseListener init (JLabel i, int number) {
                    this.j = i;
                    this.number = number;
                    return this;
                }
            }.init(b_Resistencias[i],i));
            
            base_Resistencias[i] = new javax.swing.JTextField();
            base_Resistencias[i].setHorizontalAlignment(JTextField.CENTER);
            base_Resistencias[i].setEditable(false);
            libre_Resistencias[i] = new javax.swing.JTextField();
            libre_Resistencias[i].setHorizontalAlignment(JTextField.CENTER);
            
            libre_Resistencias[i].addKeyListener(new java.awt.event.KeyAdapter() {
                JTextField f;
                @Override
                public void keyTyped(java.awt.event.KeyEvent evt) {
                    intTextField(evt,f);
                }
                
                public KeyListener init(JTextField f) {
                    this.f = f;
                    return this;
                }
                
            }.init(libre_Resistencias[i]));
            
            dado_Resistencias[i] = new javax.swing.JTextField();
            dado_Resistencias[i].setEditable(false);
            dado_Resistencias[i].setHorizontalAlignment(JTextField.CENTER);
            res_Resistencias[i] = new javax.swing.JTextField();
            res_Resistencias[i].setEditable(false);
            res_Resistencias[i].setHorizontalAlignment(JTextField.CENTER);
            res_Resistencias[i].setFont(res_Resistencias[i].getFont().deriveFont(Font.BOLD));
            
            jPanel16.add(b_Resistencias[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50+(i*30), -1, -1));
            jPanel16.add(base_Resistencias[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50+(i*30), 30, 20));
            jPanel16.add(libre_Resistencias[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50+(i*30), 30, 20));
            jPanel16.add(dado_Resistencias[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50+(i*30), 30, 20));
            jPanel16.add(res_Resistencias[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 50+(i*30), 55, 20));
        }
        
        valuesResistencias(this.ficha);
    }
    
    private void initArmaduras() {
        nombreArmadura = new JTextField[5];
        filArmadura = new JTextField[5];
        conArmadura = new JTextField[5];
        penArmadura = new JTextField[5];
        calArmadura = new JTextField[5];
        eleArmadura = new JTextField[5];
        friArmadura = new JTextField[5];
        enerArmadura = new JTextField[5];
        posArmadura = new JTextField[5];
        
        for (int i = 0; i < 5; i++) {
            nombreArmadura[i] = new JTextField();
            filArmadura[i] = new JTextField();
            conArmadura[i] = new JTextField();
            penArmadura[i] = new JTextField();
            calArmadura[i] = new JTextField();
            eleArmadura[i] = new JTextField();
            friArmadura[i] = new JTextField();
            enerArmadura[i] = new JTextField();
            posArmadura[i] = new JTextField();
            
            nombreArmadura[i].setHorizontalAlignment(JTextField.CENTER);
            filArmadura[i].setHorizontalAlignment(JTextField.CENTER);
            conArmadura[i].setHorizontalAlignment(JTextField.CENTER);
            penArmadura[i].setHorizontalAlignment(JTextField.CENTER);
            calArmadura[i].setHorizontalAlignment(JTextField.CENTER);
            eleArmadura[i].setHorizontalAlignment(JTextField.CENTER);
            friArmadura[i].setHorizontalAlignment(JTextField.CENTER);
            enerArmadura[i].setHorizontalAlignment(JTextField.CENTER);
            posArmadura[i].setHorizontalAlignment(JTextField.CENTER);
            
            nombreArmadura[i].setFont(new java.awt.Font("Tahoma", 1, 8));
            posArmadura[i].setFont(new java.awt.Font("Tahoma", 1, 8));
            
            if (i != 4) {
                nombreArmadura[i].setEditable(false);
                filArmadura[i].setEditable(false);
                conArmadura[i].setEditable(false);
                penArmadura[i].setEditable(false);
                calArmadura[i].setEditable(false);
                eleArmadura[i].setEditable(false);
                friArmadura[i].setEditable(false);
                enerArmadura[i].setEditable(false);
                posArmadura[i].setEditable(false);
            } else {
                filArmadura[i].addKeyListener(new java.awt.event.KeyAdapter() {
                    JTextField f;
                    @Override
                    public void keyTyped(java.awt.event.KeyEvent evt) {
                        intTextField(evt,f);
                    }
                    
                    @Override
                    public void keyReleased(java.awt.event.KeyEvent evt) {
                        calculadora();
                    }

                    public KeyListener init(JTextField f) {
                        this.f = f;
                        return this;
                    }

                }.init(filArmadura[i]));
                conArmadura[i].addKeyListener(new java.awt.event.KeyAdapter() {
                    JTextField f;
                    @Override
                    public void keyTyped(java.awt.event.KeyEvent evt) {
                        intTextField(evt,f);
                    }
                    
                    @Override
                    public void keyReleased(java.awt.event.KeyEvent evt) {
                        calculadora();
                    }

                    public KeyListener init(JTextField f) {
                        this.f = f;
                        return this;
                    }

                }.init(conArmadura[i]));
                penArmadura[i].addKeyListener(new java.awt.event.KeyAdapter() {
                    JTextField f;
                    @Override
                    public void keyTyped(java.awt.event.KeyEvent evt) {
                        intTextField(evt,f);
                    }
                    
                    @Override
                    public void keyReleased(java.awt.event.KeyEvent evt) {
                        calculadora();
                    }

                    public KeyListener init(JTextField f) {
                        this.f = f;
                        return this;
                    }

                }.init(penArmadura[i]));
                calArmadura[i].addKeyListener(new java.awt.event.KeyAdapter() {
                    JTextField f;
                    @Override
                    public void keyTyped(java.awt.event.KeyEvent evt) {
                        intTextField(evt,f);
                    }
                    
                    @Override
                    public void keyReleased(java.awt.event.KeyEvent evt) {
                        calculadora();
                    }

                    public KeyListener init(JTextField f) {
                        this.f = f;
                        return this;
                    }

                }.init(calArmadura[i]));
                eleArmadura[i].addKeyListener(new java.awt.event.KeyAdapter() {
                    JTextField f;
                    @Override
                    public void keyTyped(java.awt.event.KeyEvent evt) {
                        intTextField(evt,f);
                    }
                    
                    @Override
                    public void keyReleased(java.awt.event.KeyEvent evt) {
                        calculadora();
                    }

                    public KeyListener init(JTextField f) {
                        this.f = f;
                        return this;
                    }

                }.init(eleArmadura[i]));
                friArmadura[i].addKeyListener(new java.awt.event.KeyAdapter() {
                    JTextField f;
                    @Override
                    public void keyTyped(java.awt.event.KeyEvent evt) {
                        intTextField(evt,f);
                    }
                    
                    @Override
                    public void keyReleased(java.awt.event.KeyEvent evt) {
                        calculadora();
                    }

                    public KeyListener init(JTextField f) {
                        this.f = f;
                        return this;
                    }

                }.init(friArmadura[i]));
                enerArmadura[i].addKeyListener(new java.awt.event.KeyAdapter() {
                    JTextField f;
                    @Override
                    public void keyTyped(java.awt.event.KeyEvent evt) {
                        intTextField(evt,f);
                    }
                    
                    @Override
                    public void keyReleased(java.awt.event.KeyEvent evt) {
                        calculadora();
                    }

                    public KeyListener init(JTextField f) {
                        this.f = f;
                        return this;
                    }

                }.init(enerArmadura[i]));
            }
            if (i != 4) {
                jPanel14.add(nombreArmadura[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 60+(i*30), 58, 20));
                jPanel14.add(posArmadura[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 60+(i*30), 45, 20));
            }
            jPanel14.add(filArmadura[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 60+(i*30), 25, 20));
            jPanel14.add(conArmadura[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 60+(i*30), 25, 20));
            jPanel14.add(penArmadura[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(228, 60+(i*30), 25, 20));
            jPanel14.add(calArmadura[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(258, 60+(i*30), 25, 20));
            jPanel14.add(eleArmadura[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 60+(i*30), 25, 20));
            jPanel14.add(friArmadura[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(318, 60+(i*30), 25, 20));
            jPanel14.add(enerArmadura[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(348, 60+(i*30), 37, 20));
        }
        
        calcBase.addKeyListener(new java.awt.event.KeyAdapter() {
            JTextField f;
            @Override
            public void keyTyped(java.awt.event.KeyEvent evt) {
                intTextField(evt,f);
            }

            public KeyListener init(JTextField f) {
                this.f = f;
                return this;
            }

        }.init(calcBase));
        calcPorcentaje.addKeyListener(new java.awt.event.KeyAdapter() {
            JTextField f;
            @Override
            public void keyTyped(java.awt.event.KeyEvent evt) {
                intTextField(evt,f);
            }

            public KeyListener init(JTextField f) {
                this.f = f;
                return this;
            }

        }.init(calcPorcentaje));
        
        valuesArmaduras();
    }

    private void initArmas() {
        this.armas = new ArmaGUI[4];
        
        this.armas[0] = new ArmaGUI(this.settings, this.log, 0);
        
        jPanel10.add(armas[0].nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 160, 20));
        jPanel10.add(armas[0].damage, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 160, 20));
        jPanel10.add(armas[0].critico1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 75, 20));
        jPanel10.add(armas[0].critico2, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 100, 75, 20));
        
        jPanel10.add(armas[0].enterezaB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, -1, -1));
        jPanel10.add(armas[0].enterezaBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, 25, 20));
        jPanel10.add(armas[0].enterezaLibre, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, 25, 20));
        jPanel10.add(armas[0].enterezaDado, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 25, 20));
        jPanel10.add(armas[0].enterezaResultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 40, 40, 20));
        
        jPanel10.add(armas[0].roturaB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, -1, -1));
        jPanel10.add(armas[0].roturaBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 70, 25, 20));
        jPanel10.add(armas[0].roturaLibre, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 70, 25, 20));
        jPanel10.add(armas[0].roturaDado, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, 25, 20));
        jPanel10.add(armas[0].roturaResultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 70, 40, 20));

        jPanel10.add(armas[0].presenciaB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, -1, -1));
        jPanel10.add(armas[0].presenciaBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, 25, 20));
        jPanel10.add(armas[0].presenciaLibre, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, 25, 20));
        jPanel10.add(armas[0].presenciaDado, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, 25, 20));
        jPanel10.add(armas[0].presenciaResultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 100, 40, 20));
        
        this.armas[1] = new ArmaGUI(this.settings, this.log, 1);
        
        jPanel11.add(armas[1].nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 160, 20));
        jPanel11.add(armas[1].damage, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 160, 20));
        jPanel11.add(armas[1].critico1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 75, 20));
        jPanel11.add(armas[1].critico2, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 100, 75, 20));
        
        jPanel11.add(armas[1].enterezaB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, -1, -1));
        jPanel11.add(armas[1].enterezaBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, 25, 20));
        jPanel11.add(armas[1].enterezaLibre, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, 25, 20));
        jPanel11.add(armas[1].enterezaDado, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 25, 20));
        jPanel11.add(armas[1].enterezaResultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 40, 40, 20));
        
        jPanel11.add(armas[1].roturaB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, -1, -1));
        jPanel11.add(armas[1].roturaBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 70, 25, 20));
        jPanel11.add(armas[1].roturaLibre, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 70, 25, 20));
        jPanel11.add(armas[1].roturaDado, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, 25, 20));
        jPanel11.add(armas[1].roturaResultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 70, 40, 20));

        jPanel11.add(armas[1].presenciaB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, -1, -1));
        jPanel11.add(armas[1].presenciaBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, 25, 20));
        jPanel11.add(armas[1].presenciaLibre, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, 25, 20));
        jPanel11.add(armas[1].presenciaDado, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, 25, 20));
        jPanel11.add(armas[1].presenciaResultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 100, 40, 20));
        
        this.armas[2] = new ArmaGUI(this.settings, this.log, 2);
        
        jPanel12.add(armas[2].nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 160, 20));
        jPanel12.add(armas[2].damage, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 160, 20));
        jPanel12.add(armas[2].critico1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 75, 20));
        jPanel12.add(armas[2].critico2, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 100, 75, 20));
        
        jPanel12.add(armas[2].enterezaB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, -1, -1));
        jPanel12.add(armas[2].enterezaBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, 25, 20));
        jPanel12.add(armas[2].enterezaLibre, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, 25, 20));
        jPanel12.add(armas[2].enterezaDado, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 25, 20));
        jPanel12.add(armas[2].enterezaResultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 40, 40, 20));
        
        jPanel12.add(armas[2].roturaB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, -1, -1));
        jPanel12.add(armas[2].roturaBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 70, 25, 20));
        jPanel12.add(armas[2].roturaLibre, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 70, 25, 20));
        jPanel12.add(armas[2].roturaDado, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, 25, 20));
        jPanel12.add(armas[2].roturaResultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 70, 40, 20));
        jPanel12.add(armas[2].presenciaB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, -1, -1));
        jPanel12.add(armas[2].presenciaBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, 25, 20));
        jPanel12.add(armas[2].presenciaLibre, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, 25, 20));
        jPanel12.add(armas[2].presenciaDado, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, 25, 20));
        jPanel12.add(armas[2].presenciaResultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 100, 40, 20));
        
        this.armas[3] = new ArmaGUI(this.settings, this.log, 3);
        
        jPanel13.add(armas[3].nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 160, 20));
        jPanel13.add(armas[3].damage, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 160, 20));
        jPanel13.add(armas[3].critico1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 75, 20));
        jPanel13.add(armas[3].critico2, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 100, 75, 20));
        
        jPanel13.add(armas[3].enterezaB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, -1, -1));
        jPanel13.add(armas[3].enterezaBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, 25, 20));
        jPanel13.add(armas[3].enterezaLibre, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, 25, 20));
        jPanel13.add(armas[3].enterezaDado, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 25, 20));
        jPanel13.add(armas[3].enterezaResultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 40, 40, 20));
        
        jPanel13.add(armas[3].roturaB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, -1, -1));
        jPanel13.add(armas[3].roturaBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 70, 25, 20));
        jPanel13.add(armas[3].roturaLibre, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 70, 25, 20));
        jPanel13.add(armas[3].roturaDado, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, 25, 20));
        jPanel13.add(armas[3].roturaResultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 70, 40, 20));

        jPanel13.add(armas[3].presenciaB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, -1, -1));
        jPanel13.add(armas[3].presenciaBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, 25, 20));
        jPanel13.add(armas[3].presenciaLibre, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, 25, 20));
        jPanel13.add(armas[3].presenciaDado, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, 25, 20));
        jPanel13.add(armas[3].presenciaResultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 100, 40, 20));
        
        valuesArmas();
    }
    
    private void initCombate() {
        b_combateFisico = new JLabel[3];
        b_combateSobrenatural = new JLabel[3];
        b_convocatoria = new JLabel[4];
        
        base_combateFisico = new JTextField[3];
        libre_combateFisico = new JTextField[3];
        dado_combateFisico = new JTextField[3];
        res_combateFisico = new JTextField[3];
        
        base_combateSobrenatural = new JTextField[3];
        libre_combateSobrenatural = new JTextField[3];
        dado_combateSobrenatural = new JTextField[3];
        res_combateSobrenatural = new JTextField[3];
        
        base_convocatoria = new JTextField[4];
        libre_convocatoria = new JTextField[4];
        dado_convocatoria = new JTextField[4];
        res_convocatoria = new JTextField[4];
        
        bDadoCritico = new JLabel();
        
        // Fisico
        for (int i = 0; i < 3; i++) {
            b_combateFisico[i] = new javax.swing.JLabel();
            b_combateFisico[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton.png"))); // NOI18N
            b_combateFisico[i].addMouseListener(new java.awt.event.MouseAdapter() {
                JLabel j;
                int number;
                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    ficha.addLog(log.addLog(log.queBoton("Combate Fisico", number) + ": " + b_MouseClickedFisico(evt, number)));
                }
                @Override
                public void mouseEntered(java.awt.event.MouseEvent evt) {
                    b_MouseEntered(evt,j);
                }
                @Override
                public void mouseExited(java.awt.event.MouseEvent evt) {
                    b_MouseExited(evt,j);
                }
                @Override
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    b_MousePressed(evt,j);
                }
                @Override
                public void mouseReleased(java.awt.event.MouseEvent evt) {
                    b_MouseEntered(evt,j);
                }
                
                public MouseListener init (JLabel i, int number) {
                    this.j = i;
                    this.number = number;
                    return this;
                }
            }.init(b_combateFisico[i],i));
            
            base_combateFisico[i] = new javax.swing.JTextField();
            base_combateFisico[i].setHorizontalAlignment(JTextField.CENTER);
            base_combateFisico[i].setEditable(false);
            libre_combateFisico[i] = new javax.swing.JTextField();
            libre_combateFisico[i].setHorizontalAlignment(JTextField.CENTER);
            
            libre_combateFisico[i].addKeyListener(new java.awt.event.KeyAdapter() {
                JTextField f;
                @Override
                public void keyTyped(java.awt.event.KeyEvent evt) {
                    intTextField(evt,f);
                }
                
                public KeyListener init(JTextField f) {
                    this.f = f;
                    return this;
                }
                
            }.init(libre_combateFisico[i]));
            
            dado_combateFisico[i] = new javax.swing.JTextField();
            dado_combateFisico[i].setEditable(false);
            dado_combateFisico[i].setHorizontalAlignment(JTextField.CENTER);
            res_combateFisico[i] = new javax.swing.JTextField();
            res_combateFisico[i].setEditable(false);
            res_combateFisico[i].setHorizontalAlignment(JTextField.CENTER);
            res_combateFisico[i].setFont(res_combateFisico[i].getFont().deriveFont(Font.BOLD));
            
            jPanel21.add(b_combateFisico[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110+(i*40), -1, -1));
            jPanel21.add(base_combateFisico[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110+(i*40), 30, 20));
            jPanel21.add(libre_combateFisico[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110+(i*40), 30, 20));
            jPanel21.add(dado_combateFisico[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110+(i*40), 30, 20));
            jPanel21.add(res_combateFisico[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110+(i*40), 50, 20));
        }
        
        // Turno
        b_turno = new javax.swing.JLabel();
        b_turno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton.png"))); // NOI18N
        b_turno.addMouseListener(new java.awt.event.MouseAdapter() {
            JLabel j;
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ficha.addLog(log.addLog("Turno arma" + String.valueOf(comboTurno.getSelectedIndex()+1) + ": " + b_MouseClickedTurno(evt)));
            }
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                b_MouseEntered(evt,j);
            }
            @Override
            public void mouseExited(java.awt.event.MouseEvent evt) {
                b_MouseExited(evt,j);
            }
            @Override
            public void mousePressed(java.awt.event.MouseEvent evt) {
                b_MousePressed(evt,j);
            }
            @Override
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                b_MouseEntered(evt,j);
            }

            public MouseListener init (JLabel i) {
                this.j = i;
                return this;
            }
        }.init(b_turno));

        base_turno = new javax.swing.JTextField();
        base_turno.setHorizontalAlignment(JTextField.CENTER);
        base_turno.setEditable(false);
        libre_turno = new javax.swing.JTextField();
        libre_turno.setHorizontalAlignment(JTextField.CENTER);

        libre_turno.addKeyListener(new java.awt.event.KeyAdapter() {
            JTextField f;
            @Override
            public void keyTyped(java.awt.event.KeyEvent evt) {
                intTextField(evt,f);
            }

            public KeyListener init(JTextField f) {
                this.f = f;
                return this;
            }

        }.init(libre_turno));

        dado_turno = new javax.swing.JTextField();
        dado_turno.setEditable(false);
        dado_turno.setHorizontalAlignment(JTextField.CENTER);
        res_turno = new javax.swing.JTextField();
        res_turno.setEditable(false);
        res_turno.setHorizontalAlignment(JTextField.CENTER);
        res_turno.setFont(res_turno.getFont().deriveFont(Font.BOLD));

        jPanel21.add(b_turno, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));
        jPanel21.add(base_turno, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, 30, 20));
        jPanel21.add(libre_turno, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 30, 20));
        jPanel21.add(dado_turno, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 30, 20));
        jPanel21.add(res_turno, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 50, 20));
        
        // Sobrenatural
        for (int i = 0; i < 3; i++) {
            b_combateSobrenatural[i] = new javax.swing.JLabel();
            b_combateSobrenatural[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton.png"))); // NOI18N
            b_combateSobrenatural[i].addMouseListener(new java.awt.event.MouseAdapter() {
                JLabel j;
                int number;
                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    ficha.addLog(log.addLog(log.queBoton("Combate Sobrenatural", number) + ": " + b_MouseClickedSobrenatural(evt, number)));
                }
                @Override
                public void mouseEntered(java.awt.event.MouseEvent evt) {
                    b_MouseEntered(evt,j);
                }
                @Override
                public void mouseExited(java.awt.event.MouseEvent evt) {
                    b_MouseExited(evt,j);
                }
                @Override
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    b_MousePressed(evt,j);
                }
                @Override
                public void mouseReleased(java.awt.event.MouseEvent evt) {
                    b_MouseEntered(evt,j);
                }
                
                public MouseListener init (JLabel i, int number) {
                    this.j = i;
                    this.number = number;
                    return this;
                }
            }.init(b_combateSobrenatural[i],i));
            
            base_combateSobrenatural[i] = new javax.swing.JTextField();
            base_combateSobrenatural[i].setHorizontalAlignment(JTextField.CENTER);
            base_combateSobrenatural[i].setEditable(false);
            libre_combateSobrenatural[i] = new javax.swing.JTextField();
            libre_combateSobrenatural[i].setHorizontalAlignment(JTextField.CENTER);
            
            libre_combateSobrenatural[i].addKeyListener(new java.awt.event.KeyAdapter() {
                JTextField f;
                @Override
                public void keyTyped(java.awt.event.KeyEvent evt) {
                    intTextField(evt,f);
                }
                
                public KeyListener init(JTextField f) {
                    this.f = f;
                    return this;
                }
                
            }.init(libre_combateSobrenatural[i]));
            
            dado_combateSobrenatural[i] = new javax.swing.JTextField();
            dado_combateSobrenatural[i].setEditable(false);
            dado_combateSobrenatural[i].setHorizontalAlignment(JTextField.CENTER);
            res_combateSobrenatural[i] = new javax.swing.JTextField();
            res_combateSobrenatural[i].setEditable(false);
            res_combateSobrenatural[i].setHorizontalAlignment(JTextField.CENTER);
            res_combateSobrenatural[i].setFont(res_combateSobrenatural[i].getFont().deriveFont(Font.BOLD));
            
            jPanel17.add(b_combateSobrenatural[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40+(i*35), -1, -1));
            jPanel17.add(base_combateSobrenatural[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40+(i*35), 30, 20));
            jPanel17.add(libre_combateSobrenatural[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40+(i*35), 30, 20));
            jPanel17.add(dado_combateSobrenatural[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40+(i*35), 30, 20));
            jPanel17.add(res_combateSobrenatural[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40+(i*35), 50, 20));
        }
        
        // Convocatoria
        for (int i = 0; i < 4; i++) {
            b_convocatoria[i] = new javax.swing.JLabel();
            b_convocatoria[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton.png"))); // NOI18N
            b_convocatoria[i].addMouseListener(new java.awt.event.MouseAdapter() {
                JLabel j;
                int number;
                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    ficha.addLog(log.addLog(log.queBoton("Convocatoria", number) + ": " + b_MouseClickedConvocatoria(evt, number)));
                }
                @Override
                public void mouseEntered(java.awt.event.MouseEvent evt) {
                    b_MouseEntered(evt,j);
                }
                @Override
                public void mouseExited(java.awt.event.MouseEvent evt) {
                    b_MouseExited(evt,j);
                }
                @Override
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    b_MousePressed(evt,j);
                }
                @Override
                public void mouseReleased(java.awt.event.MouseEvent evt) {
                    b_MouseEntered(evt,j);
                }
                
                public MouseListener init (JLabel i, int number) {
                    this.j = i;
                    this.number = number;
                    return this;
                }
            }.init(b_convocatoria[i],i));
            
            base_convocatoria[i] = new javax.swing.JTextField();
            base_convocatoria[i].setHorizontalAlignment(JTextField.CENTER);
            base_convocatoria[i].setEditable(false);
            libre_convocatoria[i] = new javax.swing.JTextField();
            libre_convocatoria[i].setHorizontalAlignment(JTextField.CENTER);
            
            libre_convocatoria[i].addKeyListener(new java.awt.event.KeyAdapter() {
                JTextField f;
                @Override
                public void keyTyped(java.awt.event.KeyEvent evt) {
                    intTextField(evt,f);
                }
                
                public KeyListener init(JTextField f) {
                    this.f = f;
                    return this;
                }
                
            }.init(libre_convocatoria[i]));
            
            dado_convocatoria[i] = new javax.swing.JTextField();
            dado_convocatoria[i].setEditable(false);
            dado_convocatoria[i].setHorizontalAlignment(JTextField.CENTER);
            res_convocatoria[i] = new javax.swing.JTextField();
            res_convocatoria[i].setEditable(false);
            res_convocatoria[i].setHorizontalAlignment(JTextField.CENTER);
            res_convocatoria[i].setFont(res_convocatoria[i].getFont().deriveFont(Font.BOLD));
            
            jPanel19.add(b_convocatoria[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40+(i*30), -1, -1));
            jPanel19.add(base_convocatoria[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40+(i*30), 30, 20));
            jPanel19.add(libre_convocatoria[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40+(i*30), 30, 20));
            jPanel19.add(dado_convocatoria[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40+(i*30), 30, 20));
            jPanel19.add(res_convocatoria[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 40+(i*30), 50, 20));
        }
        
        baseCalcComb.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyTyped(java.awt.event.KeyEvent evt) {
                char vchar = evt.getKeyChar();
                if (!Character.isDigit(vchar) || vchar == KeyEvent.VK_BACK_SPACE || vchar == KeyEvent.VK_DELETE) {
                    evt.consume();
                }
            }
        });
        
        ventajaCalcComb.addKeyListener(new java.awt.event.KeyAdapter() {
            JTextField f;
            @Override
            public void keyTyped(java.awt.event.KeyEvent evt) {
                intTextField(evt,f);
            }

            public KeyListener init(JTextField f) {
                this.f = f;
                return this;
            }

        }.init(ventajaCalcComb));
        
        armaduraCalcComb.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyTyped(java.awt.event.KeyEvent evt) {
                char vchar = evt.getKeyChar();
                if (!Character.isDigit(vchar) || vchar == KeyEvent.VK_BACK_SPACE || vchar == KeyEvent.VK_DELETE) {
                    evt.consume();
                }
            }
        });
        
        damageCritico.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyTyped(java.awt.event.KeyEvent evt) {
                char vchar = evt.getKeyChar();
                if (!Character.isDigit(vchar) || vchar == KeyEvent.VK_BACK_SPACE || vchar == KeyEvent.VK_DELETE) {
                    evt.consume();
                }
            }
        });
        libreCritico.addKeyListener(new java.awt.event.KeyAdapter() {
            JTextField f;
            @Override
            public void keyTyped(java.awt.event.KeyEvent evt) {
                intTextField(evt,f);
            }

            public KeyListener init(JTextField f) {
                this.f = f;
                return this;
            }

        }.init(libreCritico));
        
        bDadoCritico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton.png"))); // NOI18N
        bDadoCritico.addMouseListener(new java.awt.event.MouseAdapter() {
                JLabel j;
                int number;
                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    ficha.addLog(log.addLog("Critico: " + b_MouseClickedCritico(evt)));
                    String localizacion;
                    if (javax.swing.SwingUtilities.isLeftMouseButton(evt)) {
                        int pos = (int)(Math.random()*100) + 1;

                        if (pos <= 10) {
                            localizacion = "Costillas";
                            posCritico.setForeground(Color.BLACK);
                        } else if (pos <= 20) {
                            localizacion = "Hombro";
                            posCritico.setForeground(Color.BLACK);
                        } else if (pos <= 30) {
                            localizacion = "Estómago";
                            posCritico.setForeground(Color.BLACK);
                        } else if (pos <= 35) {
                            localizacion = "Riñones";
                            posCritico.setForeground(Color.BLACK);
                        } else if (pos <= 48) {
                            localizacion = "Pecho";
                            posCritico.setForeground(Color.BLACK);
                        } else if (pos <= 50) {
                            localizacion = "Corazón";
                            posCritico.setForeground(Color.RED);
                        } else if (pos <= 54) {
                            localizacion = "Antebrazo derecho superior";
                            posCritico.setForeground(Color.BLACK);
                        } else if (pos <= 58) {
                            localizacion = "Antebrazo derecho inferior";
                            posCritico.setForeground(Color.BLACK);
                        } else if (pos <= 60) {
                            localizacion = "Mano derecha";
                            posCritico.setForeground(Color.BLACK);
                        } else if (pos <= 64) {
                            localizacion = "Antebrazo izquierdo superior";
                            posCritico.setForeground(Color.BLACK);
                        } else if (pos <= 68) {
                            localizacion = "Antebrazo izquierdo inferior";
                            posCritico.setForeground(Color.BLACK);
                        } else if (pos <= 70) {
                            localizacion = "Mano izquierda";
                            posCritico.setForeground(Color.BLACK);
                        } else if (pos <= 74) {
                            localizacion = "Muslo derecho";
                            posCritico.setForeground(Color.BLACK);
                        } else if (pos <= 78) {
                            localizacion = "Pantorrilla derecha";
                            posCritico.setForeground(Color.BLACK);
                        } else if (pos <= 80) {
                            localizacion = "Pie derecho";
                            posCritico.setForeground(Color.BLACK);
                        } else if (pos <= 84) {
                            localizacion = "Muslo izquierdo";
                            posCritico.setForeground(Color.BLACK);
                        } else if (pos <= 88) {
                            localizacion = "Pantorrilla izquierda";
                            posCritico.setForeground(Color.BLACK);
                        } else if (pos <= 90) {
                            localizacion = "Pie izquierdo";
                            posCritico.setForeground(Color.BLACK);
                        } else {
                            localizacion = "Cabeza";
                            posCritico.setForeground(Color.RED);
                        }
                        ficha.addLog(log.addLog("Localización Crítico: " + localizacion + " ("+String.valueOf(pos)+")"));
                        
                    } else {
                        localizacion = "";
                    }
                    posCritico.setText(localizacion);
                }
                
                @Override
                public void mouseEntered(java.awt.event.MouseEvent evt) {
                    b_MouseEntered(evt,j);
                }
                @Override
                public void mouseExited(java.awt.event.MouseEvent evt) {
                    b_MouseExited(evt,j);
                }
                @Override
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    b_MousePressed(evt,j);
                }
                @Override
                public void mouseReleased(java.awt.event.MouseEvent evt) {
                    b_MouseEntered(evt,j);
                }

                private MouseListener init(JLabel bDadoCritico) {
                    this.j = bDadoCritico;
                    return this;
                }
            }.init(bDadoCritico));
        
        jPanel22.add(bDadoCritico, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 60, -1, -1));
        
        valuesCombate(this.ficha);
    }
    
    private void valuesPrincipales(Ficha ficha) {
        fieldNombre.setText(ficha.getNombre());
        fieldCategoria.setText(ficha.getCategoria());
        fieldNivel.setText(String.valueOf(ficha.getNivel()));
        
        //---------------------Vida------------------------------
        fieldVida.setText(String.valueOf(ficha.getVida()));
        barraVida.setMaximum(ficha.getVida());
        barraVida.setMinimum(0);
        fieldVidaActual.setText(String.valueOf(ficha.getVidaActual()));
        barraVida.setValue(ficha.getVidaActual());
        //---------------------Zeon------------------------------
        fieldZeon.setText(String.valueOf(ficha.getZeon()));
        barraZeon.setMaximum(ficha.getZeon());
        barraZeon.setMinimum(0);
        fieldZeonActual.setText(String.valueOf(ficha.getZeonActual()));
        barraZeon.setValue(ficha.getZeonActual());
        //---------------------Ki------------------------------
        fieldKi.setText(String.valueOf(ficha.getKi()));
        barraKi.setMaximum(ficha.getKi());
        fieldKiActual.setText(String.valueOf(ficha.getKiActual()));
        barraKi.setMinimum(0);
        barraKi.setValue(ficha.getKiActual());
        //---------------------Cansancio------------------------------
        fieldCansancio.setText(String.valueOf(ficha.getCansancio()));
        barraCansancio.setMaximum(ficha.getCansancio());
        fieldCansancioActual.setText(String.valueOf(ficha.getCansancioActual()));
        barraCansancio.setMinimum(0);
        barraCansancio.setValue(ficha.getCansancioActual());
        
        for (int i = 0; i < 8; i++) {
            base_Atributos[i].setText(String.valueOf(ficha.getAtributo(i)));
            libre_Atributos[i].setText(String.valueOf(0));
            dado_Atributos[i].setText(String.valueOf(0));
            res_Atributos[i].setText(String.valueOf(Integer.parseInt(base_Atributos[i].getText()) + Integer.parseInt(libre_Atributos[i].getText()) + Integer.parseInt(dado_Atributos[i].getText())));
        }
    }
    
    private void valuesSecundarias(Ficha ficha) {
        for (int i = 0; i < 38; i++) {
            base_Secundarias[i].setText(String.valueOf(ficha.getSecundarias(i)));
            libre_Secundarias[i].setText(String.valueOf(0));
            dado_Secundarias[i].setText(String.valueOf(0));
            res_Secundarias[i].setText(String.valueOf(Integer.parseInt(base_Secundarias[i].getText()) + Integer.parseInt(libre_Secundarias[i].getText()) + Integer.parseInt(dado_Secundarias[i].getText())));
        }
    }
    
    private void valuesResistencias(Ficha ficha) {
        for (int i = 0; i < 5; i++) {
            base_Resistencias[i].setText(String.valueOf(ficha.getRes(i)));
            libre_Resistencias[i].setText(String.valueOf(0));
            dado_Resistencias[i].setText(String.valueOf(0));
            res_Resistencias[i].setText(String.valueOf(Integer.parseInt(base_Resistencias[i].getText()) + Integer.parseInt(libre_Resistencias[i].getText()) + Integer.parseInt(dado_Resistencias[i].getText())));
        }
    }
    
    private void valuesArmaduras() {        
        for (int i = 0; i < 4; i++) {
            Armadura a = ficha.getArmadura(i);
            
            nombreArmadura[i].setText(a.getNombre());
            filArmadura[i].setText(String.valueOf(a.getDefensa(0)));
            conArmadura[i].setText(String.valueOf(a.getDefensa(1)));
            penArmadura[i].setText(String.valueOf(a.getDefensa(2)));
            calArmadura[i].setText(String.valueOf(a.getDefensa(3)));
            eleArmadura[i].setText(String.valueOf(a.getDefensa(4)));
            friArmadura[i].setText(String.valueOf(a.getDefensa(5)));
            enerArmadura[i].setText(String.valueOf(a.getDefensa(6)));
            posArmadura[i].setText(a.getPosicion());
        }
    }
    
    private void valuesArmas() {
        for (int i = 0; i < 4; i++) {
            Arma a = ficha.getArma(i);
            
            this.armas[i].nombre.setText(a.getNombre());
            this.armas[i].damage.setText(String.valueOf(a.getDamage()));
            this.armas[i].critico1.setText(String.valueOf(a.getCritico(0)));
            this.armas[i].critico2.setText(String.valueOf(a.getCritico(1)));
            this.armas[i].enterezaBase.setText(String.valueOf(a.getEntereza()));
            this.armas[i].roturaBase.setText(String.valueOf(a.getRotura()));
            this.armas[i].presenciaBase.setText(String.valueOf(a.getPresencia()));
            
            this.armas[i].enterezaLibre.setText("0");
            this.armas[i].enterezaDado.setText("0");
            this.armas[i].enterezaResultado.setText(String.valueOf(Integer.parseInt(armas[i].enterezaBase.getText()) + Integer.parseInt(this.armas[i].enterezaLibre.getText()) + Integer.parseInt(this.armas[i].enterezaDado.getText())));
            
            this.armas[i].roturaLibre.setText("0");
            this.armas[i].roturaDado.setText("0");
            this.armas[i].roturaResultado.setText(String.valueOf(Integer.parseInt(armas[i].roturaBase.getText()) + Integer.parseInt(this.armas[i].roturaLibre.getText()) + Integer.parseInt(this.armas[i].roturaDado.getText())));
            
            this.armas[i].presenciaLibre.setText("0");
            this.armas[i].presenciaDado.setText("0");
            this.armas[i].presenciaResultado.setText(String.valueOf(Integer.parseInt(armas[i].presenciaBase.getText()) + Integer.parseInt(this.armas[i].presenciaLibre.getText()) + Integer.parseInt(this.armas[i].presenciaDado.getText())));
        }
    }
    
    private void valuesCombate(Ficha ficha) {
        for (int i = 0; i < 3; i++){ // Cojo ataque, defensa y esquiva
            base_combateFisico[i].setText(String.valueOf(ficha.getCombate(i)));
            libre_combateFisico[i].setText(String.valueOf(0));
            dado_combateFisico[i].setText(String.valueOf(0));
            res_combateFisico[i].setText(String.valueOf(ficha.getCombate(i)));
        }
        
        base_turno.setText(String.valueOf(ficha.getTurno(comboTurno.getSelectedIndex())));
        libre_turno.setText(String.valueOf(0));
        dado_turno.setText(String.valueOf(0));
        res_turno.setText(String.valueOf(ficha.getTurno(comboTurno.getSelectedIndex())));
        
        base_combateSobrenatural[0].setText(String.valueOf(ficha.getCombate(3)));
        libre_combateSobrenatural[0].setText(String.valueOf(0));
        dado_combateSobrenatural[0].setText(String.valueOf(0));
        res_combateSobrenatural[0].setText(String.valueOf(ficha.getCombate(3)));
        
        
        base_combateSobrenatural[1].setText(String.valueOf(ficha.getPotencialPsiquico()));
        libre_combateSobrenatural[1].setText(String.valueOf(0));
        dado_combateSobrenatural[1].setText(String.valueOf(0));
        res_combateSobrenatural[1].setText(String.valueOf(ficha.getPotencialPsiquico()));
        
        base_combateSobrenatural[2].setText(String.valueOf(ficha.getCombate(4)));
        libre_combateSobrenatural[2].setText(String.valueOf(0));
        dado_combateSobrenatural[2].setText(String.valueOf(0));
        res_combateSobrenatural[2].setText(String.valueOf(ficha.getCombate(4)));
        
        for (int i = 0; i < 4; i++) {
            base_convocatoria[i].setText(String.valueOf(ficha.getConvocatoria(i)));
            libre_convocatoria[i].setText(String.valueOf(0));
            dado_convocatoria[i].setText(String.valueOf(0));
            res_convocatoria[i].setText(String.valueOf(ficha.getConvocatoria(i)));
        }
    }
    
    private String b_MouseClicked(java.awt.event.MouseEvent evt, int i) {                                           
        // No he pulsado el botón izquierdo
        if (evt != null && !javax.swing.SwingUtilities.isLeftMouseButton(evt)) {
            res_Secundarias[i].setForeground(Color.BLACK);
            dado_Secundarias[i].setText("0");
            
            int libre = 0;
            try {
                libre = Integer.parseInt(libre_Secundarias[i].getText());
            } catch (NumberFormatException e) {

            }
            
            res_Secundarias[i].setText(String.valueOf(Integer.parseInt(base_Secundarias[i].getText()) + libre));
            return null;
        }
        // Hace el cálculo con el dado nuevo
        Dado d = new Dado(settings);
        if (settings.getFisicos()) {
            int truco = 1;
            try{
                truco = Integer.parseInt(dado_Secundarias[i].getText());
            } catch(NumberFormatException ex){}
            d.trucarDado(truco);
        } else {
            d.lanzarDado(true);
        }
        
        if (d.getResultado() >= 90) {
            ArrayList<Integer> traza = d.getTraza();
            
            if (traza.size() == 2){
                res_Secundarias[i].setForeground(Color.GREEN);
            }else if (traza.size() == 3) {
                res_Secundarias[i].setForeground(Color.BLUE);
            } else if (traza.size() >= 4) {
                res_Secundarias[i].setForeground(Color.MAGENTA);
            }
        } else if (d.getResultado() <= 3) {
            res_Secundarias[i].setForeground(Color.RED);
        } else {
            res_Secundarias[i].setForeground(Color.BLACK);
        }
        
        if (!settings.getFisicos())
            dado_Secundarias[i].setText(String.valueOf(d.getResultado()));
        
        int libre = 0;
        try {
            libre = Integer.parseInt(libre_Secundarias[i].getText());
        } catch (NumberFormatException e) {
            
        }
        
        res_Secundarias[i].setText(String.valueOf(Integer.parseInt(base_Secundarias[i].getText()) + libre + d.getResultado()));
        return (base_Secundarias[i].getText() + " + " + libre + " + " + String.valueOf(d.getResultado()) + " = " + String.valueOf(Integer.parseInt(base_Secundarias[i].getText()) + libre + d.getResultado()));
    }
    
    private String b_MouseClickedAtr(java.awt.event.MouseEvent evt, int i) {                                           
        // No he pulsado el botón izquierdo
        if (evt != null && !javax.swing.SwingUtilities.isLeftMouseButton(evt)) {
            res_Atributos[i].setForeground(Color.BLACK);
            dado_Atributos[i].setText("0");
            
            int libre = 0;
            try {
                libre = Integer.parseInt(libre_Atributos[i].getText());
            } catch (NumberFormatException e) {

            }
            
            res_Atributos[i].setText(String.valueOf(Integer.parseInt(base_Atributos[i].getText()) + libre));
            return null;
        }

        // Hace el cálculo con el dado nuevo
        Dado d = new Dado(settings);
        if (settings.getFisicos()) {
            int truco = 1;
            try{
                truco = Integer.parseInt(dado_Atributos[i].getText());
            } catch(NumberFormatException ex){}
            d.trucarDado(truco);
        } else {
            d.lanzarD10();
        }
        int add = 0;
        switch (d.getResultado()) {
            case 10:
                add = 2;
                res_Atributos[i].setForeground(Color.GREEN);
                break;
            case 1:
                res_Atributos[i].setForeground(Color.RED);
                break;
            default:
                res_Atributos[i].setForeground(Color.BLACK);
                break;
        }
        
        int libre = 0;
        
        try {
            libre = Integer.parseInt(libre_Atributos[i].getText());
        } catch (NumberFormatException e) {
            
        }
        if (!settings.getFisicos())
            dado_Atributos[i].setText(String.valueOf(d.getResultado()));
        res_Atributos[i].setText(String.valueOf(add + Integer.parseInt(base_Atributos[i].getText()) + libre + d.getResultado()));
        
        return (base_Atributos[i].getText() + " + " + libre + " + " + String.valueOf(d.getResultado() + add) + " = " + String.valueOf(add + Integer.parseInt(base_Atributos[i].getText()) + libre + d.getResultado()));
    }
    
    private String b_MouseClickedRes(java.awt.event.MouseEvent evt, int i) {    
        // No he pulsado el botón izquierdo
        if (evt != null && !javax.swing.SwingUtilities.isLeftMouseButton(evt)) {
            res_Resistencias[i].setForeground(Color.BLACK);
            dado_Resistencias[i].setText("0");
            
            int libre = 0;
            try {
                libre = Integer.parseInt(libre_Resistencias[i].getText());
            } catch (NumberFormatException e) {

            }
            
            res_Resistencias[i].setText(String.valueOf(Integer.parseInt(base_Resistencias[i].getText()) + libre));
            return null;
        }
        
        // Hace el cálculo con el dado nuevo
        Dado d = new Dado(settings);
        
        if (settings.getFisicos()) {
            int truco = 1;
            try{
                truco = Integer.parseInt(dado_Resistencias[i].getText());
            } catch(NumberFormatException ex){}
            d.trucarDado(truco);
        } else {
            d.lanzarDado(false); // No acepta abiertas
        }
        
        if (d.getResultado() >= 90) {
            res_Resistencias[i].setForeground(Color.GREEN);
        } else if (d.getResultado() <= 3) {
            res_Resistencias[i].setForeground(Color.RED);
        } else {
            res_Resistencias[i].setForeground(Color.BLACK);
        }
        
        int libre = 0;
        
        try {
            libre = Integer.parseInt(libre_Resistencias[i].getText());
        } catch (NumberFormatException e) {
            
        }
        
        if (!settings.getFisicos())
            dado_Resistencias[i].setText(String.valueOf(d.getResultado()));
        res_Resistencias[i].setText(String.valueOf(Integer.parseInt(base_Resistencias[i].getText()) + libre + Integer.parseInt(dado_Resistencias[i].getText())));
        
        return (base_Resistencias[i].getText() + " + " + libre + " + " + String.valueOf(d.getResultado()) + " = " + String.valueOf(Integer.parseInt(base_Resistencias[i].getText()) + libre + d.getResultado()));
    }
    
    private String b_MouseClickedFisico(java.awt.event.MouseEvent evt, int i) {
        // No he pulsado el botón izquierdo
        if (evt != null && !javax.swing.SwingUtilities.isLeftMouseButton(evt)) {
            res_combateFisico[i].setForeground(Color.BLACK);
            dado_combateFisico[i].setText("0");
            
            int libre = 0;
            try {
                libre = Integer.parseInt(libre_combateFisico[i].getText());
            } catch (NumberFormatException e) {

            }
            
            res_combateFisico[i].setText(String.valueOf(Integer.parseInt(base_combateFisico[i].getText()) + libre));
            return null;
        }
        
        // Hace el cálculo con el dado nuevo
        Dado d = new Dado(settings);
        d.lanzarDado(true);
        
        if (settings.getFisicos()) {
            int truco = 1;
            try{
                truco = Integer.parseInt(dado_combateFisico[i].getText());
            } catch(NumberFormatException ex){}
            d.trucarDado(truco);
        } else {
            d.lanzarDado(true);
        }
        
        if (d.getResultado() >= 90) {
            ArrayList<Integer> traza = d.getTraza();

            if (traza.size() == 2){
                res_combateFisico[i].setForeground(Color.GREEN);
            }else if (traza.size() == 3) {
                res_combateFisico[i].setForeground(Color.BLUE);
            } else if (traza.size() >= 4) {
                res_combateFisico[i].setForeground(Color.MAGENTA);
            }
            } else if (d.getResultado() <= 3) {
                res_combateFisico[i].setForeground(Color.RED);
            } else {
                res_combateFisico[i].setForeground(Color.BLACK);
            }
            
            if (!settings.getFisicos())
                dado_combateFisico[i].setText(String.valueOf(d.getResultado()));

            int libre = 0;
            try {
                libre = Integer.parseInt(libre_combateFisico[i].getText());
            } catch (NumberFormatException e) {

            }

            res_combateFisico[i].setText(String.valueOf(Integer.parseInt(base_combateFisico[i].getText()) + libre + Integer.parseInt(dado_combateFisico[i].getText())));
            return (base_combateFisico[i].getText() + " + " + libre + " + " + String.valueOf(d.getResultado()) + " = " + String.valueOf(Integer.parseInt(base_combateFisico[i].getText()) + libre + d.getResultado()));
    }
    
    private String b_MouseClickedTurno(java.awt.event.MouseEvent evt) {
        // No he pulsado el botón izquierdo
        if (evt != null && !javax.swing.SwingUtilities.isLeftMouseButton(evt)) {
            res_turno.setForeground(Color.BLACK);
            dado_turno.setText("0");
            
            int libre = 0;
            try {
                libre = Integer.parseInt(libre_turno.getText());
            } catch (NumberFormatException e) {

            }
            
            res_turno.setText(String.valueOf(Integer.parseInt(base_turno.getText()) + libre));
            return null;
        }
        
        // Hace el cálculo con el dado nuevo
        Dado d = new Dado(settings);
        d.lanzarDado(true);
        
        if (settings.getFisicos()) {
            int truco = 1;
            try{
                truco = Integer.parseInt(dado_turno.getText());
            } catch(NumberFormatException ex){}
            d.trucarDado(truco);
        } else {
            d.lanzarDado(true);
        }
        
        if (d.getResultado() >= 90) {
            ArrayList<Integer> traza = d.getTraza();

            if (traza.size() == 2){
                res_turno.setForeground(Color.GREEN);
            }else if (traza.size() == 3) {
                res_turno.setForeground(Color.BLUE);
            } else if (traza.size() >= 4) {
                res_turno.setForeground(Color.MAGENTA);
            }
            } else if (d.getResultado() <= 3) {
                res_turno.setForeground(Color.RED);
            } else {
                res_turno.setForeground(Color.BLACK);
            }
            
            if (!settings.getFisicos())
                dado_turno.setText(String.valueOf(d.getResultado()));

            int libre = 0;
            try {
                libre = Integer.parseInt(libre_turno.getText());
            } catch (NumberFormatException e) {

            }

            res_turno.setText(String.valueOf(Integer.parseInt(base_turno.getText()) + libre + Integer.parseInt(dado_turno.getText())));
            return (base_turno.getText() + " + " + libre + " + " + String.valueOf(d.getResultado()) + " = " + String.valueOf(Integer.parseInt(base_turno.getText()) + libre + d.getResultado()));
    }
    
    private String b_MouseClickedSobrenatural(java.awt.event.MouseEvent evt, int i) {
        // No he pulsado el botón izquierdo
        if (evt != null && !javax.swing.SwingUtilities.isLeftMouseButton(evt)) {
            res_combateSobrenatural[i].setForeground(Color.BLACK);
            dado_combateSobrenatural[i].setText("0");
            
            int libre = 0;
            try {
                libre = Integer.parseInt(libre_combateSobrenatural[i].getText());
            } catch (NumberFormatException e) {

            }
            
            res_combateSobrenatural[i].setText(String.valueOf(Integer.parseInt(base_combateSobrenatural[i].getText()) + libre));
            return null;
        }

        // Hace el cálculo con el dado nuevo
        Dado d = new Dado(settings);
        d.lanzarDado(true);
        
        if (settings.getFisicos()) {
            int truco = 1;
            try{
                truco = Integer.parseInt(dado_combateSobrenatural[i].getText());
            } catch(NumberFormatException ex){}
            d.trucarDado(truco);
        } else {
            d.lanzarDado(true);
        }
        
        if (d.getResultado() >= 90) {
            ArrayList<Integer> traza = d.getTraza();

            if (traza.size() == 2){
                res_combateSobrenatural[i].setForeground(Color.GREEN);
            }else if (traza.size() == 3) {
                res_combateSobrenatural[i].setForeground(Color.BLUE);
            } else if (traza.size() >= 4) {
                res_combateSobrenatural[i].setForeground(Color.MAGENTA);
            }
            } else if (d.getResultado() <= 3) {
                res_combateSobrenatural[i].setForeground(Color.RED);
            } else {
                res_combateSobrenatural[i].setForeground(Color.BLACK);
            }
            
            if (!settings.getFisicos())
                dado_combateSobrenatural[i].setText(String.valueOf(d.getResultado()));

            int libre = 0;
            try {
                libre = Integer.parseInt(libre_combateSobrenatural[i].getText());
            } catch (NumberFormatException e) {

            }

            res_combateSobrenatural[i].setText(String.valueOf(Integer.parseInt(base_combateSobrenatural[i].getText()) + libre + d.getResultado()));
            return (base_combateSobrenatural[i].getText() + " + " + libre + " + " + String.valueOf(d.getResultado()) + " = " + String.valueOf(Integer.parseInt(base_combateSobrenatural[i].getText()) + libre + d.getResultado()));
    }
    
    private String b_MouseClickedConvocatoria(java.awt.event.MouseEvent evt, int i) {
        // No he pulsado el botón izquierdo
        if (evt != null && !javax.swing.SwingUtilities.isLeftMouseButton(evt)) {
            res_convocatoria[i].setForeground(Color.BLACK);
            dado_convocatoria[i].setText("0");
            
            int libre = 0;
            try {
                libre = Integer.parseInt(libre_convocatoria[i].getText());
            } catch (NumberFormatException e) {

            }
            
            res_convocatoria[i].setText(String.valueOf(Integer.parseInt(base_convocatoria[i].getText()) + libre));
            return null;
        }

        // Hace el cálculo con el dado nuevo
        Dado d = new Dado(settings);
        
        if (settings.getFisicos()) {
            int truco = 1;
            try{
                truco = Integer.parseInt(dado_convocatoria[i].getText());
            } catch(NumberFormatException ex){}
            d.trucarDado(truco);
        } else {
            d.lanzarDado(true);
        }
        
        if (d.getResultado() >= 90) {
            ArrayList<Integer> traza = d.getTraza();

            if (traza.size() == 2){
                res_convocatoria[i].setForeground(Color.GREEN);
            }else if (traza.size() == 3) {
                res_convocatoria[i].setForeground(Color.BLUE);
            } else if (traza.size() >= 4) {
                res_convocatoria[i].setForeground(Color.MAGENTA);
            }
            
        } else if (d.getResultado() <= 3) {
            res_convocatoria[i].setForeground(Color.RED);
        } else {
            res_convocatoria[i].setForeground(Color.BLACK);
        }
            
        if (!settings.getFisicos())
            dado_convocatoria[i].setText(String.valueOf(d.getResultado()));

        int libre = 0;
        try {
            libre = Integer.parseInt(libre_convocatoria[i].getText());
        } catch (NumberFormatException e) {

        }

        res_convocatoria[i].setText(String.valueOf(Integer.parseInt(base_convocatoria[i].getText()) + libre + d.getResultado()));
        return (base_convocatoria[i].getText() + " + " + libre + " + " + String.valueOf(d.getResultado()) + " = " + String.valueOf(Integer.parseInt(base_convocatoria[i].getText()) + libre + d.getResultado()));
    }
    
    private String b_MouseClickedCritico(java.awt.event.MouseEvent evt) {
        // No he pulsado el botón izquierdo
        if (evt != null && !javax.swing.SwingUtilities.isLeftMouseButton(evt)) {
            resCritico.setForeground(Color.BLACK);
            dadoCritico.setText("0");
            
            int libre = 0, damage = 0;
            try {
                libre = Integer.parseInt(libreCritico.getText());
            } catch (NumberFormatException e) {

            }
            try {
            damage = Integer.parseInt(damageCritico.getText());
            } catch (NumberFormatException e) {

            }
            
            resCritico.setText(String.valueOf(damage + libre));
            return null;
        }

        // Hace el cálculo con el dado nuevo
        Dado d = new Dado(settings);
        if (settings.getFisicos()) {
            int truco = 1;
            try {
                truco = Integer.parseInt(dadoCritico.getText());
            } catch (NumberFormatException ex){}
            d.trucarDado(truco);
        } else {
            d.lanzarDado(false);
        }
        if (d.getResultado() >= 90) {
            resCritico.setForeground(Color.GREEN);
        } else if (d.getResultado() <= 3) {
            resCritico.setForeground(Color.RED);
        }else {
            resCritico.setForeground(Color.BLACK);
        }

        resCritico.setText(String.valueOf(d.getResultado()));

        int libre = 0, damage = 0;
        try {
            libre = Integer.parseInt(libreCritico.getText());
        } catch (NumberFormatException e) {

        }
        try {
            damage = Integer.parseInt(damageCritico.getText());
        } catch (NumberFormatException e) {

        }

        if (!settings.getFisicos())
            dadoCritico.setText(String.valueOf(d.getResultado()));
        resCritico.setText(String.valueOf(damage + libre + d.getResultado()));
        
        return String.valueOf(damage) + " + " + String.valueOf(libre) + " + " + String.valueOf(d.getResultado()) + " = " + String.valueOf(damage + libre + d.getResultado());
    }
    
    private void b_MouseEntered(java.awt.event.MouseEvent evt, JLabel boton) {        
        ImageIcon II = new ImageIcon(getClass().getResource("/imagenes/botonIn.png"));
        boton.setIcon(II);
    }
    
    private void b_MouseExited(java.awt.event.MouseEvent evt, JLabel boton) {                                           
        ImageIcon II = new ImageIcon(getClass().getResource("/imagenes/boton.png"));
        boton.setIcon(II);
    }

    private void b_MousePressed(java.awt.event.MouseEvent evt, JLabel boton) {                                           
        ImageIcon II = new ImageIcon(getClass().getResource("/imagenes/botonPre.png"));
        boton.setIcon(II);
    }

    private void myInitComponents() {
        seleccionado = new javax.swing.JFileChooser();
        seleccionado.setMultiSelectionEnabled(true);
        seleccionado.setFileFilter(new FileNameExtensionFilter("xls & xlsx Excel & JSON", "xls", "xlsx", "json"));
    }
    
    private void guardarSettings() {
        CargarSettings.exportJason(this.direccion + "\\settings.json", this.settings);
    }
    
    private void exit() {
        if (!guardarTodo()) // Si se cancel el salir
            return;
        this.dispose();
        guardarSettings();
    }
    
    private void dadosFisicos() {
        // Atributos
        for (int i = 0; i < 8; i++) {
            dado_Atributos[i].setEditable(settings.getFisicos());
        }
        // Secundarias
        for (int i = 0; i < 38; i++) {
            dado_Secundarias[i].setEditable(settings.getFisicos());
        }
        // Resistencias
        for (int i = 0; i < 5; i++) {
            dado_Resistencias[i].setEditable(settings.getFisicos());
        }
        // Armas
        for (int i = 0; i < 4; i++) {
            armas[i].dadosFisicos();
        }
        // Combate
        // Fisico y Sobrenatural
        for (int i = 0; i < 3; i++) {
            dado_combateFisico[i].setEditable(settings.getFisicos());
            dado_combateSobrenatural[i].setEditable(settings.getFisicos());
        }
        // Turno
        {
            dado_turno.setEditable(settings.getFisicos());
        }
        // Convocatoria
        for (int i = 0; i < 4; i++) {
            dado_convocatoria[i].setEditable(settings.getFisicos());
        }
        //Critico
        dadoCritico.setEditable(settings.getFisicos());
    }

    private void listenerFisicos() {
        // Atributos
        for (int i = 0; i < 8; i++) {
            dado_Atributos[i].addKeyListener(new java.awt.event.KeyAdapter() {
                int i;
                @Override
                public void keyTyped(java.awt.event.KeyEvent evt) {
                    char vchar = evt.getKeyChar();
                    if (!Character.isDigit(vchar) || vchar == KeyEvent.VK_BACK_SPACE || vchar == KeyEvent.VK_DELETE) {
                        evt.consume();
                    }
                }
                
                @Override
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    int d = 1;
                    try {
                        d = Integer.parseInt (dado_Atributos[i].getText());
                    } catch (NumberFormatException ex){}
                    if (d > 10){
                        dado_Atributos[i].setText("10");
                    }else if (d <= 0) {
                        dado_Atributos[i].setText("1");
                    }
                    b_MouseClickedAtr(null, i);
                }
                
                public KeyListener init (int i) {
                    this.i = i;
                    return this;
                }
            }.init(i));
        }
        // Secundarias
        for (int i = 0; i < 38; i++) {
            dado_Secundarias[i].addKeyListener(new java.awt.event.KeyAdapter() {
                int i;
                @Override
                public void keyTyped(java.awt.event.KeyEvent evt) {
                    char vchar = evt.getKeyChar();
                    if (!Character.isDigit(vchar) || vchar == KeyEvent.VK_BACK_SPACE || vchar == KeyEvent.VK_DELETE) {
                        evt.consume();
                    }
                }
                
                @Override
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    int d = 1;
                    try {
                        d = Integer.parseInt (dado_Secundarias[i].getText());
                    } catch (NumberFormatException ex){}
                    if (d <= 0) {
                        dado_Secundarias[i].setText("1");
                    }
                    
                    b_MouseClicked(null, i);
                }
                
                public KeyListener init (int i) {
                    this.i = i;
                    return this;
                }
            }.init(i));
        }
        // Resistencias
        for (int i = 0; i < 5; i++) {
            dado_Resistencias[i].addKeyListener(new java.awt.event.KeyAdapter() {
                int i;
                @Override
                public void keyTyped(java.awt.event.KeyEvent evt) {
                    char vchar = evt.getKeyChar();
                    if (!Character.isDigit(vchar) || vchar == KeyEvent.VK_BACK_SPACE || vchar == KeyEvent.VK_DELETE) {
                        evt.consume();
                    }
                }
                
                @Override
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    int d = 1;
                    try {
                        d = Integer.parseInt (dado_Resistencias[i].getText());
                    } catch (NumberFormatException ex){}
                    if (d > 100){
                        dado_Resistencias[i].setText("100");
                    }else if (d <= 0) {
                        dado_Resistencias[i].setText("1");
                    }
                    b_MouseClickedRes(null, i);
                }
                
                public KeyListener init (int i) {
                    this.i = i;
                    return this;
                }
            }.init(i));
        }
        // Armas
        for (int i = 0; i < 4; i++) {
            armas[i].listenerFisicos();
        }
        // Combate
        // Fisico y Sobrenatural
        for (int i = 0; i < 3; i++) {
            dado_combateFisico[i].addKeyListener(new java.awt.event.KeyAdapter() {
                int i;
                @Override
                public void keyTyped(java.awt.event.KeyEvent evt) {
                    char vchar = evt.getKeyChar();
                    if (!Character.isDigit(vchar) || vchar == KeyEvent.VK_BACK_SPACE || vchar == KeyEvent.VK_DELETE) {
                        evt.consume();
                    }
                }
                
                @Override
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    int d = 1;
                    try {
                        d = Integer.parseInt (dado_combateFisico[i].getText());
                    } catch (NumberFormatException ex){}
                    if (d <= 0) {
                        dado_combateFisico[i].setText("1");
                    }
                    b_MouseClickedFisico(null, i);
                }
                
                public KeyListener init (int i) {
                    this.i = i;
                    return this;
                }
            }.init(i));
            dado_combateSobrenatural[i].addKeyListener(new java.awt.event.KeyAdapter() {
                int i;
                @Override
                public void keyTyped(java.awt.event.KeyEvent evt) {
                    char vchar = evt.getKeyChar();
                    if (!Character.isDigit(vchar) || vchar == KeyEvent.VK_BACK_SPACE || vchar == KeyEvent.VK_DELETE) {
                        evt.consume();
                    }
                }
                
                @Override
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    int d = 1;
                    try {
                        d = Integer.parseInt (dado_combateSobrenatural[i].getText());
                    } catch (NumberFormatException ex){}
                    if (d <= 0) {
                        dado_combateSobrenatural[i].setText("1");
                    }
                    b_MouseClickedSobrenatural(null, i);
                }
                
                public KeyListener init (int i) {
                    this.i = i;
                    return this;
                }
            }.init(i));
        }
        // Turno
        {
            dado_turno.addKeyListener(new java.awt.event.KeyAdapter() {
                @Override
                public void keyTyped(java.awt.event.KeyEvent evt) {
                    char vchar = evt.getKeyChar();
                    if (!Character.isDigit(vchar) || vchar == KeyEvent.VK_BACK_SPACE || vchar == KeyEvent.VK_DELETE) {
                        evt.consume();
                    }
                }
                
                @Override
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    int d = 1;
                    try {
                        d = Integer.parseInt (dado_turno.getText());
                    } catch (NumberFormatException ex){}
                    if (d <= 0) {
                        dado_turno.setText("1");
                    }
                    b_MouseClickedTurno(null);
                }
            });   
        }
        // Convocatoria
        for (int i = 0; i < 4; i++) {
            dado_convocatoria[i].addKeyListener(new java.awt.event.KeyAdapter() {
                int i;
                @Override
                public void keyTyped(java.awt.event.KeyEvent evt) {
                    char vchar = evt.getKeyChar();
                    if (!Character.isDigit(vchar) || vchar == KeyEvent.VK_BACK_SPACE || vchar == KeyEvent.VK_DELETE) {
                        evt.consume();
                    }
                }
                
                @Override
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    int d = 1;
                    try {
                        d = Integer.parseInt (dado_convocatoria[i].getText());
                    } catch (NumberFormatException ex){}
                    if (d <= 0) {
                        dado_convocatoria[i].setText("1");
                    }
                    b_MouseClickedConvocatoria(null, i);
                }
                
                public KeyListener init (int i) {
                    this.i = i;
                    return this;
                }
            }.init(i));
        }
        // Critico
        dadoCritico.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyTyped(java.awt.event.KeyEvent evt) {
                char vchar = evt.getKeyChar();
                if (!Character.isDigit(vchar) || vchar == KeyEvent.VK_BACK_SPACE || vchar == KeyEvent.VK_DELETE) {
                    evt.consume();
                }
            }

            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                int d = 1;
                try {
                    d = Integer.parseInt (dadoCritico.getText());
                } catch (NumberFormatException ex){}
                if (d > 100){
                    dadoCritico.setText("100");
                }else if (d <= 0) {
                    dadoCritico.setText("1");
                }
                
                b_MouseClickedCritico(null);
            }
        });
    }
    
    private void cargarAyuda() {
        
    }
    
    private void anadirComboNombre(String str) {
        cambioNombres = true;
        comboNombre.addItem(str);
        cambioNombres = false;
    }
    
    private void resetColors(){
        posCritico.setForeground(Color.BLACK);
        
        for (int i = 0; i < 38; i++)
            res_Secundarias[i].setForeground(Color.BLACK);
        
        for (int i = 0; i < 8; i++)
            res_Atributos[i].setForeground(Color.BLACK);
        
        for (int i = 0; i < 5; i++)
            res_Resistencias[i].setForeground(Color.BLACK);
        
        for (int i = 0; i < 3; i++)
            res_combateFisico[i].setForeground(Color.BLACK);
        
        res_turno.setForeground(Color.BLACK);
        
        for (int i = 0; i < 3; i++)
            res_combateSobrenatural[i].setForeground(Color.BLACK);
        
        for (int i = 0; i < 4; i++)
            res_convocatoria[i].setForeground(Color.BLACK);
        
        resCritico.setForeground(Color.BLACK);
        
        for (int i = 0; i < 4; i++) {
            this.armas[i].enterezaResultado.setForeground(Color.BLACK);
            this.armas[i].roturaResultado.setForeground(Color.BLACK);
            this.armas[i].presenciaResultado.setForeground(Color.BLACK);
        }
    }
    
    private void guardar() {
        labelCargar.setVisible(true);
        String mensaje = "¿Desea guardar los cambios de\n" + this.ficha.getPath() + "?";
        if (((String)comboNombre.getSelectedItem()).endsWith("json")) { // Actualiza
            if (guardarSinPreguntar.get(comboNombre.getSelectedIndex()) || JOptionPane.showConfirmDialog(null, mensaje, "Guardar JSON", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                guardarSinPreguntar.set(comboNombre.getSelectedIndex(), true);
                this.ficha.setSeleccionado(0);
                new Thread() {
                        @Override
                        public void run() {
                            FileJSON.exportJason(ficha.getPath(), ficha);
                            labelCargar.setVisible(false);
                        }
                 }.start();
            } else {
                labelCargar.setVisible(false);
            }
        } else {
            try {
                if (guardarSinPreguntar.get(comboNombre.getSelectedIndex()) || JOptionPane.showConfirmDialog(null, mensaje, "Guardar Excel", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    guardarSinPreguntar.set(comboNombre.getSelectedIndex(), true);
                    this.ficha.setSeleccionado(0);
                    new Thread() {
                        @Override
                        public void run() {
                            Anima.guardar(ficha);
                            labelCargar.setVisible(false);
                        }
                     }.start();
                } else {
                    labelCargar.setVisible(false);
                }
            } catch (GuardaException ex) {
                JFileChooser guardarDesc = new JFileChooser(this.ficha.getPath());
                guardarDesc.setFileFilter(new FileNameExtensionFilter("JSON Files", "json")); 

                if(guardarDesc.showSaveDialog(null)== JFileChooser.APPROVE_OPTION){
                    new Thread() {
                        @Override
                        public void run() {
                            String ruta = guardarDesc.getSelectedFile().getAbsolutePath();
                            if (!ruta.endsWith("json")) {
                                ruta = ruta + ".json";
                            }
                            FileJSON.exportJason(ruta, ficha);
                            ficha.setPath(ruta);
                            labelCargar.setVisible(false);
                        }
                    }.start();
                } else {
                    labelCargar.setVisible(false);
                }
            }
        }
    }
    
    private void guardar(Ficha ficha, int index) {
        labelCargar.setVisible(true);
        if (((String)comboNombre.getSelectedItem()).endsWith("json")) { // Actualiza
            this.ficha.setSeleccionado(0);
            new Thread() {
                    @Override
                    public void run() {
                        FileJSON.exportJason(ficha.getPath(), ficha);
                        guardarSinPreguntar.set(index, true);
                        labelCargar.setVisible(false);
                    }
             }.start();
        } else {
            new Thread() {
                @Override
                public void run() {
                    try {
                        ficha.setSeleccionado(0);
                        Anima.guardar(ficha);
                        guardarSinPreguntar.set(index, true);
                        labelCargar.setVisible(false);
                    } catch (GuardaException ex) {
                        JFileChooser guardarDesc = new JFileChooser(ficha.getPath());
                        guardarDesc.setFileFilter(new FileNameExtensionFilter("JSON Files", "json")); 
                        guardarDesc.setDialogTitle("Guardar - " + ficha.getNombre());
                        if(guardarDesc.showSaveDialog(null)== JFileChooser.APPROVE_OPTION){
                            String ruta = guardarDesc.getSelectedFile().getAbsolutePath();
                            if (!ruta.endsWith("json")) {
                                ruta = ruta + ".json";
                            }
                            FileJSON.exportJason(ruta, ficha);
                            ficha.setPath(ruta);
                            guardarSinPreguntar.set(index, true);
                            labelCargar.setVisible(false);
                        } else {
                            labelCargar.setVisible(false);
                        }
                    }
                }
             }.start();
        }
    }
    
    private boolean preguntarGuardar() {
        return guardarSinPreguntar.stream().noneMatch((file) -> (file == false));
    }
    
    public void actualizarVersion () {
        URL url;
        if ((url = Descargar.actualizar(version)) != null) {
            int respuesta = JOptionPane.showConfirmDialog(null, "Se han encontrado nuevas versiones de AnimaDicer\n¿Deseas descargarla?","¿Actualizar AnimaDicer?", JOptionPane.YES_NO_OPTION);
            if (respuesta == JOptionPane.YES_OPTION) {
                
                File miDir = new File (".");                
                new Thread () {
                    @Override
                    public void run() {
                        try {
                            jDownload.setVisible(true);
                            Descargar.actualiza(url, miDir.getCanonicalPath()+"\\AnimaDicer.jar");
                            jDownload.setVisible(false);
                        } catch (IOException ex) {
                            JFileChooser guardarDesc = new JFileChooser();
                            guardarDesc.setFileFilter(new FileNameExtensionFilter("jar - Java Files", "jar"));

                            if(guardarDesc.showSaveDialog(null)== JFileChooser.APPROVE_OPTION){ 
                                String path = guardarDesc.getSelectedFile().getAbsolutePath();
                                if (!path.endsWith("jar")) {
                                    path = path + ".jar";
                                }
                                try {
                                    Descargar.actualiza(url, path);
                                    jDownload.setVisible(false);
                                } catch (IOException ex1) {
                                }
                            }
                        } finally {
                            JOptionPane.showMessageDialog(null, "Actualización completada.\nEjecute nuevamente AnimaDicer.");
                            exit();
                        }  
                    }
                }.start();
            }
        }
    }
}
